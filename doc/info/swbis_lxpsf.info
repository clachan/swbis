This is info/swbis_lxpsf.info, produced by makeinfo version 4.13 from
stdin.

"' lxpsf.1 "' "' "'


File: swbis_lxpsf.info,  Node: Top,  Next: NAME,  Up: (dir)

1 LXPSF 1 \" -*- nroff -*-
**************************

* Menu:

* NAME::
* SYNOPSIS::
* DESCRIPTION::
* HOWTO Use with swpackage::
* FILES::
* RELATED STANDARDS::
* IDENTIFICATION::
* SEE ALSO::
* BUGS::


File: swbis_lxpsf.info,  Node: NAME,  Next: SYNOPSIS,  Prev: Top,  Up: Top

1.1 NAME
========

lxpsf - Translate packages to a tar archive with a PSF.


File: swbis_lxpsf.info,  Node: SYNOPSIS,  Next: DESCRIPTION,  Prev: NAME,  Up: Top

1.2 SYNOPSIS
============

lxpsf [options] [package_file]


File: swbis_lxpsf.info,  Node: DESCRIPTION,  Next: HOWTO Use with swpackage,  Prev: SYNOPSIS,  Up: Top

1.3 DESCRIPTION
===============

Lxpsf reads the input package and writes a tar or cpio archive to
stdout, depending on the native (or encapsulated) format of the input
package.  The output layout has a single leading directory named
according to the name, version, and release attributes.

The first regular file is "PSF", and is a IEEE 1387.2-1995 (ISO/IEC
15068-2:1999) Product Specification File containing the package
metadata.  Subsequent files are control data represented as files, and,
the files of the distribution.  The output is designed so the swpackage
utility is able to form a Posix package from the installed output.

Currently,  RPM format v3 (both source and binary), Debian Package
format, Slackware runtime packages and plain vanilla tarballs (with a
leading directory path) are supported for translation.

* Menu:

* Options::


File: swbis_lxpsf.info,  Node: Options,  Up: DESCRIPTION

1.3.1 Options
-------------

`'
     -p ,-psf-only Write only the psf file to stdout.

`'
     -A ,-psf-form1 A PSF form for RPM translation (deprecated).

`'
     -A ,-psf-form2 A second PSF form for RPM translation (deprecated).

`'
     -A ,-psf-form3 A third PSF form for RPM translation (current).

`'

`'
     -H format Force the specified format.  The choices are currently
     (only) ustar.

`'
     -x ,-use-recursive-fileset Use "file *" instead of individual file
     definitions in the PSF.

`'
     -r ,-no-leading-path use "." as the leading archive path.

`'
     -o ,-info-only Write the INFO file for the rpm archive to stdout.

`'
     -D ,debug-level=TYPE Always set to "link"



File: swbis_lxpsf.info,  Node: HOWTO Use with swpackage,  Next: FILES,  Prev: DESCRIPTION,  Up: Top

1.4 HOWTO Use with swpackage
============================

Either install into file system or use the -W source=- option of GNU
swpackage.

       cat your_rpm.rpm |
       lxpsf -format=ustar -psf-form3 |
       (mkdir /tmp/swbis; cd /tmp/swbis && tar xpf -; exit $?) &&
       (cd /tmp/swbis && swpackage -s PSF @- ) | tar tvf -
            cat your_rpm.rpm |
            lxpsf -format=ustar -psf-form3 |
            swpackage -W source=- -s@PSF @- | tar tvf -



File: swbis_lxpsf.info,  Node: FILES,  Next: RELATED STANDARDS,  Prev: HOWTO Use with swpackage,  Up: Top

1.5 FILES
=========


File: swbis_lxpsf.info,  Node: RELATED STANDARDS,  Next: IDENTIFICATION,  Prev: FILES,  Up: Top

1.6 RELATED STANDARDS
=====================

POSIX.1, IEEE 1387.2, XDSA C701


File: swbis_lxpsf.info,  Node: IDENTIFICATION,  Next: SEE ALSO,  Prev: RELATED STANDARDS,  Up: Top

1.7 IDENTIFICATION
==================

The RPM translation program of the swbis project.   DATE: 2010-02-22
Revision: 1.5


File: swbis_lxpsf.info,  Node: SEE ALSO,  Next: BUGS,  Prev: IDENTIFICATION,  Up: Top

1.8 SEE ALSO
============

swbisparse(1), swpackage(8)


File: swbis_lxpsf.info,  Node: BUGS,  Prev: SEE ALSO,  Up: Top

1.9 BUGS
========

Probably many. A de-facto conversion policy is intimated in the PSF by
this program.



Tag Table:
Node: Top99
Node: NAME367
Node: SYNOPSIS521
Node: DESCRIPTION666
Node: Options1622
Node: HOWTO Use with swpackage2382
Node: FILES2950
Node: RELATED STANDARDS3080
Node: IDENTIFICATION3257
Node: SEE ALSO3482
Node: BUGS3627

End Tag Table
