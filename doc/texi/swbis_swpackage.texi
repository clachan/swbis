\input texinfo   @c -*-texinfo-*-
@setfilename swpackage.info
@comment direntry.in
@dircategory Individual utilities
@direntry
* swpackage: (swbis).               make POSIX format packages
@end direntry
@comment ===============================================================
@comment WARNING: Do NOT edit this file.  It was produced automatically
@comment by man2info on Fri Nov  2 20:39:29 EDT 2018
@comment for jhl@
@comment from man/man8/swpackage.8
@comment in /home/jhl/swbis-1.13.1/doc
@comment ===============================================================

@comment @documentencoding ISO-8859-1

@comment troff -man typesetting style: headers, footers, no paragraph indentation

@paragraphindent none

@iftex
@parskip = 0.5@normalbaselineskip plus 3pt minus 1pt
@end iftex

@set lq ``
@set rq ''

@comment TROFF INPUT: ...\" $Header: /usr/src/docbook-to-man/cmd/RCS/docbook-to-man.sh,v 1.3 1996/06/17 03:36:49 fld Exp $
@comment ...\" $Header: /usr/src/docbook-to-man/cmd/RCS/docbook-to-man.sh,v 1.3 1996/06/17 03:36:49 fld Exp $
@comment TROFF INPUT: ...\"
@comment ...\"
@comment TROFF INPUT: ...\"	transcript compatibility for postscript use.
@comment ...\"	transcript compatibility for postscript use.
@comment TROFF INPUT: ...\"
@comment ...\"
@comment TROFF INPUT: ...\"	synopsis:  .P! <file.ps>
@comment ...\"	synopsis:  .P! <file.ps>
@comment TROFF INPUT: ...\"
@comment ...\"
@comment TROFF INPUT: .de P!
@comment .de P!
\.
@comment TROFF INPUT: .fl			\" force out current output buffer
@comment .fl			\" force out current output buffer
\\!%PB
\\!/showpage@{@}def
@comment TROFF INPUT: ...\" the following is from Ken Flowers -- it prevents dictionary overflows
@comment ...\" the following is from Ken Flowers -- it prevents dictionary overflows
\\!/tempdict 200 dict def tempdict begin
@comment TROFF INPUT: .fl			\" prolog
@comment .fl			\" prolog
@comment TROFF INPUT: .sy cat \\$1\" bring in postscript file
@comment .sy cat \\$1\" bring in postscript file
@comment TROFF INPUT: ...\" the following line matches the tempdict above
@comment ...\" the following line matches the tempdict above
\\!end % tempdict %
\\!PE
\\!.
@comment TROFF INPUT: .sp \\$2u	\" move below the image
@comment .sp \\$2u	\" move below the image
@comment TROFF INPUT: ..
@comment ..
@comment TROFF INPUT: .de pF
@comment .de pF
@comment TROFF INPUT: .ie     \\*(f1 .ds f1 \\n(.f
@comment .ie     \\*(f1 .ds f1 \\n(.f
@comment TROFF INPUT: .el .ie \\*(f2 .ds f2 \\n(.f
@comment .el .ie \\*(f2 .ds f2 \\n(.f
@comment TROFF INPUT: .el .ie \\*(f3 .ds f3 \\n(.f
@comment .el .ie \\*(f3 .ds f3 \\n(.f
@comment TROFF INPUT: .el .ie \\*(f4 .ds f4 \\n(.f
@comment .el .ie \\*(f4 .ds f4 \\n(.f
@comment TROFF INPUT: .el .tm ? font overflow
@comment .el .tm ? font overflow
@comment TROFF INPUT: .ft \\$1
@comment .ft \\$1
@comment TROFF INPUT: ..
@comment ..
@comment TROFF INPUT: .de fP
@comment .de fP
@comment TROFF INPUT: .ie     !\\*(f4 \{\
@comment .ie     !\\*(f4 \@{\
@comment TROFF INPUT: .	ft \\*(f4
@comment .	ft \\*(f4
@comment TROFF INPUT: .	ds f4\"
@comment .	ds f4\"
'	br \@}
@comment TROFF INPUT: .el .ie !\\*(f3 \{\
@comment .el .ie !\\*(f3 \@{\
@comment TROFF INPUT: .	ft \\*(f3
@comment .	ft \\*(f3
@comment TROFF INPUT: .	ds f3\"
@comment .	ds f3\"
'	br \@}
@comment TROFF INPUT: .el .ie !\\*(f2 \{\
@comment .el .ie !\\*(f2 \@{\
@comment TROFF INPUT: .	ft \\*(f2
@comment .	ft \\*(f2
@comment TROFF INPUT: .	ds f2\"
@comment .	ds f2\"
'	br \@}
@comment TROFF INPUT: .el .ie !\\*(f1 \{\
@comment .el .ie !\\*(f1 \@{\
@comment TROFF INPUT: .	ft \\*(f1
@comment .	ft \\*(f1
@comment TROFF INPUT: .	ds f1\"
@comment .	ds f1\"
'	br \@}
@comment TROFF INPUT: .el .tm ? font underflow
@comment .el .tm ? font underflow
@comment TROFF INPUT: ..
@comment ..
@comment TROFF INPUT: .ds f1\"

@comment WARNING: man/man8/swpackage.8:49:%%unrecognized define-string command: [.ds f1\"]

@comment TROFF INPUT: .ds f2\"

@comment WARNING: man/man8/swpackage.8:50:%%unrecognized define-string command: [.ds f2\"]

@comment TROFF INPUT: .ds f3\"

@comment WARNING: man/man8/swpackage.8:51:%%unrecognized define-string command: [.ds f3\"]

@comment TROFF INPUT: .ds f4\"

@comment WARNING: man/man8/swpackage.8:52:%%unrecognized define-string command: [.ds f4\"]

@comment TROFF INPUT: .ta 8n 16n 24n 32n 40n 48n 56n 64n 72n
@comment .ta 8n 16n 24n 32n 40n 48n 56n 64n 72n
@comment TROFF INPUT: .TH "swpackage" "8"

@headings off
@everyheading SWPACKAGE(8) @| @| SWPACKAGE(8)
@everyfooting  @| @thispage @|

@node Top

@chapter swpackage" "8


@comment TROFF INPUT: .hy 0
@comment .hy 0
@comment TROFF INPUT: .if n .na
@comment .if n .na
@comment TROFF INPUT: .SH "NAME"
@c DEBUG: print_menu("Top")

@ifnottex
@menu
* NAME::
* SYNOPSIS::
* DESCRIPTION::
* OPTIONS::
* EXTENDED OPTIONS::
* USAGE EXAMPLES::
* PACKAGE SIGNING::
* SIGNATURE VERIFICATION::
* SWPACKAGE OUTPUT FORMAT::
* SWPACKAGE INPUT FILE FORMAT::
* SAMPLE PRODUCT SPEC FILES::
* RETURN VALUE::
* SIDE EFFECTS::
* ENVIRONMENT::
* REQUISITE UTILITIES::
* FILES::
* APPLICABLE STANDARDS::
* SEE ALSO::
* IDENTIFICATION::
* BUGS::

@end menu
@end ifnottex

@comment MAN2TEXI: EON

@node NAME

@section NAME

swpackage @r{---} Package a software distribution.
@comment TROFF INPUT: .SH "SYNOPSIS"
@c DEBUG: print_menu("NAME")
@comment MAN2TEXI: EON

@node SYNOPSIS

@section SYNOPSIS

@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
@b{swpackage}    # Filter: read PSF on stdin, write a tar archive to stdout
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
@b{swpackage -s- @@-}  # Absolutely explicit, same as above
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
@b{swpackage @@FILE }
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
@b{swpackage}  [-p]  [-s @i{psf@t{_}file}]  [-f @i{file}] [-x @i{option=value}] \\
[-X @i{options@t{_}file}] [-W @i{option}] [software@t{_}selections] [@@targets]
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
@b{swpackage --help} # more authoritative documentation
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
@b{swpackage}  [options] --to-swbis [-s package@t{_}file]   # format translator
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
@b{swpackage}  [options] --resign [-s package@t{_}file]   # modify signatures
@b{swpackage}  [options] --remove-signature=N [-s package@t{_}file]
@b{swpackage}  [options] --replace-signature=N [-s package@t{_}file]
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------


@comment TROFF INPUT: .SH "DESCRIPTION"
@c DEBUG: print_menu("SYNOPSIS")
@comment MAN2TEXI: EON

@node DESCRIPTION

@section DESCRIPTION

@comment TROFF INPUT: .PP

@b{swpackage} reads a Product Specification File (PSF) and writes a distribution
to the specified target.  If no options are given a PSF is read on stdin
and a distribution is written to the default target either a directory, device,
or standard output.  To specify standard output use a dash '-' as the target.
@comment TROFF INPUT: .SH "OPTIONS"
@c DEBUG: print_menu("DESCRIPTION")
@comment MAN2TEXI: EON

@node OPTIONS

@section OPTIONS

@comment TROFF INPUT: .PP

@b{software@t{_}selections}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Refer to the software objects (products, filesets)
on which to be operated. (Not yet implemented)
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{targets}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Refers to the software@t{_}collection where the software
selections are to be applied.  To specify standard output
use a  dash '-', this overrides media@t{_}type setting to 'serial'.
Target may be a file, or device file or '-'
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-f FILE}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Reads software@t{_}selections from FILE. (Not implemented).
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-p}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Preview the package.  Perform all the packaging operations except
writing the target.  In verbose level 1, nothing is written.  Higher
verbose levels write information on stdout.  Error and warning messages
are written to stderr for verbose levels 1 and higher.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------

@comment TROFF INPUT: .PP

@b{-s PSF}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Specify the PSF file, "-" is standard input.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-x option=value}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Specify the extended option overriding the defaults file value.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-X FILE}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Specify the extended options filename, FILE,  overriding the default filenames.
This option may be given more then once. If the resulting specified value is an empty string
then reading of any options file is disabled.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-v}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
(Implementation extension.) Given one time it is identical to -x verbose=2.
This option can be given multiple times with increasing effect.
@comment TROFF INPUT: .br
@comment .br
     level 0: silent on stdout and stderr (not implemented).
@comment TROFF INPUT: .br
@comment .br
     level 1: fatal and warning messages.
@comment TROFF INPUT: .br
@comment .br
-v   level 2: level 1 plus file list and trailer message.
@comment TROFF INPUT: .br
@comment .br
-vv  level 3: level 2 verbose tar-like listing.
@comment TROFF INPUT: .br
@comment .br
-vvv level 4: level 3 extra verbose tar listing.
@comment TROFF INPUT: .br
@comment .br
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-b BYTES}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Set blocksize to BYTES number of bytes (octets).  The default is 10240.
(implementation extension)
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{@minus{}@minus{}version, -V}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
@b{Alternate Mode}:
Show version. (Implementation extension)
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{@minus{}@minus{}help}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
@b{Alternate Mode}:
Show help (Implementation extension)
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W option[,option,...]}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Specify the implementation extension option.
@comment TROFF INPUT: .br
@comment .br
Syntax: -W option[=option@t{_}argument[,option...]
@comment TROFF INPUT: .br
@comment .br
Options may be separated by a comma.  The implementation extension
options may also be given individually using the '--long-option[=option@t{_}arg]' syntax.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W cksum}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Compute POSIX cksum of the individual files.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W file-digests}
@b{-W digests}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Compute md5 digests of the individual files.
(-W digests is deprecated, use -W file-digests).
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W files}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Store the distribution file list in .../dfiles/files.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W dir=NAME}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Use NAME as the path name prefix of a distribution and also
as the value of the distribution.control@t{_}directory and
distribution.tag attribute (if not set).  May be set to an
empty string to eliminate stray leading "./".
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W sign}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Compute the
md5sum, sha1sum and adjunct@t{_}md5sum digests
and sign the package.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W dummy-sign}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Same as -W sign except use a dummy signature.
The signer program is not run and no password is required.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W signer-pgm=SIGNER}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Recognized SIGNERs are GPG, PGP2.6, and PGP5.
swverify only supports GPG, however, other types can
be verified manually using the options of swverify and
command line utilities.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W archive-digests}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Compute the md5sum, sha1sum and adjunct@t{_}md5sum digests.
See sw(5) for info on the digest and signed data input files.
The sha1sum and md5sum attributes have identical input streams.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W no-sha1}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Do not compute the sha1 digest even if directed to by other options.
(Deprecated: There is limited reason to use this option).
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W signed-file}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Write only the signed data to the specified target but do not sign.
(Deprecated: There is limited reason to use this option).
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W gpg-name=NAME}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Use NAME as the user ID to sign.  NAME becomes the option arg of the gpg @minus{}@minus{}local-user option.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W gpg-path=PATH}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Use PATH as the gpg homedir.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W gzip}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
compress output with file system gzip utilty
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W bzip2}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
compress output with file system bzip2 utility
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@b{-W lzma}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
compress output with file system lzma utility
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------

@b{-W symmetric}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
encrypt output with file system gpg utility
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------

@b{-W encrypt-for-recipient=NAME}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
encrypt with NAME's public key using file system gpg utility
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------

@comment TROFF INPUT: .PP

@b{-W source=FILE}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Use serial archive located at FILE as the source instead of the
file system.  The files referred by the PSF are taken from the serial
archive and not the file system.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W numeric-owner}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Same as GNU tar option.  Emitted archive has only uid and gids.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W absolute-names}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Same as GNU tar option.  Leading slash '/' are always stripped unless
this option is given.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W format=FORMAT}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
The default format is 'pax'.  The pax format will only generate extended headers if needed.
FORMAT is one of:
@comment TROFF INPUT: .br
@comment .br
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
 ustar   is the POSIX.1 tar format capable of storing
         pathnames up to 255 characters in length.
         Identical to GNU tar 1.15.1 --format=ustar
 ustar0  is a different POSIX.1 tar personality.
         Identical to GNU tar 1.13.25 --posix -b1 for 99 char pathnames
         Has different rendering of device numbers for non-device files,
         but otherwise identical to 'ustar'
 gnu     Identical to GNU tar version 1.15.1 --format=gnu
 oldgnu  Identical to GNU tar version 1.13 and later with
             block size set to 1. i.e. with option -b1.
         Also identical to GNU tar 1.15.1 --format=oldgnu
 gnutar  same as oldgnu, oldgnu preferred.
 pax     Extended header tar (Default)
 odc     Posix.1 cpio (magic 070707).
 newc    cpio format (magic 070701).
 crc     cpio format (magic 070702).
 bsdpax3 Identical to pax v3.0, ustar format with option -b 512.@r{
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP


@comment WARNING: man/man8/swpackage.8:338:%%new font B started without closing previous font R

}@b{-W pax-header-pid=NUMBER}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Sets the number used in any pax header naming scheme to NUMBER.
You must use this option to make archive identical
in subsequent (back-to-back) invocations.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W uuid=STRING}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Sets the uuid string to STRING instead of calling uuid(1)
You must use this option to make the catalog directory identical
in subsequent (back-to-back) invocations.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W create-time=TIME}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Applies to catalog files and the create@t{_}time attribute.
TIME is the seconds since the Unix Epoch.
You must use this option to make the catalog directory identical
in subsequent (back-to-back) invocations.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W list-psf}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Write the PSF to stdout after having processed the extended
definitions.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W to-swbis}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
@b{Alternate Mode}:
Read a package on standard input and write a POSIX
package on standard output.  Requires the
@comment .../libexec/swbis/lxpsf program.
Supported formats are any supported format of lxpsf.
Identical to:
@comment TROFF INPUT: .br
@comment .br
/swbis/lxpsf --psf-form3 -H ustar | swpackage -Wsource=- -s@@PSF
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W passphrase-fd=N}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Read the passphrase on file descriptor N.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W passfile=FILE}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Read the passphrase from FILE in the file system.  Setting FILE to
/dev/tty resets (i.e unsets) all passphrase directives, thus establishing
the default action, reading from the terminal.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W dir-owner=OWNER}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Set the owner of the leading directory archive member to OWNER.
If the option arg is "", then the owner is the owner of the current directory.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W dir-group=OWNER}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Set the group of the leading directory archive member to OWNER.
If the option arg is "", then the owner is the owner of the current directory.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W dir-modep=MODE}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Set the file permissions mode of the leading directory archive member to MODE.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W catalog-owner=OWNER}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Set the owner of the catalog section to OWNER.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W catalog-group=GROUP}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Set the group of the catalog section to GROUP.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W files-from=NAME}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Read a list of files from file NAME.  Directories are not descended recursively.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W show-options-files}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
@b{Alternate Mode}:
Show the complete list of options files and if they are found.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W show-options}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
@b{Alternate Mode}:
Show the options after reading the files and parsing the command line options.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W no-catalog}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Do not write the catalog section.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W no-front-dir}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Do not write the directory archive members that preceed the catalog section.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

Signature Modification Options.  The source file via '-s' option
is a previously signed archive file.

@b{--addsign}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
@b{Alternate Mode}:
Same as --add-signature-first
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------

@b{--delsign}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
@b{Alternate Mode}:
Opposite of --addsign,  Same as --remove-signature=1
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------

@b{--add-signature-first}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
@b{Alternate Mode}:
Add signature first in the list of package signatures.
The last signature, by convention, is the primary signature.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------

@b{--add-signature-last}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
@b{Alternate Mode}:
Add signature last in the list of package signatures.
The last signature, by convention, is the primary signature.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@b{--replace-signature=N}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
@b{Alternate Mode}:
Replace Nth signature, 0 means last signature.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@b{--remove-signature=N}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
@b{Alternate Mode}:
Remove Nth signature, 0 means last signature.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@b{--resign}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
@b{Alternate Mode}:
Same as --replace-signature=0
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@b{--resign-test, --zfilter}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
@b{Alternate Mode}:
Copy from source to target without altering. Does not generate a signature.
The output should be identical to the input.   Also has unintended use
of accessing the compression pipeline function of swpackage.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------

@b{--recompress}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
@b{Modifier to alternate Mode}:
Applies when modifying signature.  The compression methods of the input file are
detected and the output is compressed to match.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------

@b{--overwrite}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
@b{Modifier to alternate Mode}:
Overwrites file specified as the source name (by the -s FILE option).
Will likely do so safely.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .SH "EXTENDED OPTIONS"
@c DEBUG: print_menu("OPTIONS")
@comment MAN2TEXI: EON

@node EXTENDED OPTIONS

@section EXTENDED OPTIONS

@comment TROFF INPUT: .PP

These extended options can be specified on the command line using the -x option
or from the defaults file, swdefaults.
@comment TROFF INPUT: .SS "Posix"
@c DEBUG: print_menu("EXTENDED OPTIONS")

@ifnottex
@menu
* Posix::
* Swbis Implementation::

@end menu
@end ifnottex

@comment MAN2TEXI: EON

@node Posix

@subsection Posix

@comment TROFF INPUT: .PP

Shown below is an actual portion of a defaults file which show default values.
These options are set in the /usr/lib/swbis/swdefaults or the ~/.swdefaults
file.
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
swpackage.distribution@t{_}target@t{_}directory  = /var/spool/sw   # Not used
swpackage.distribution@t{_}target@t{_}serial     = -        # Not used
swpackage.enforce@t{_}dsa                    = false    # Not used
swpackage.follow@t{_}symlinks                = false    # Not used
swpackage.logfile          = /var/lib/swbis/swpackage.log   # Not used
swpackage.loglevel                       = 1         # Not used
swpackage.media@t{_}capacity                 = 0         # Not used
swpackage.media@t{_}type                     = serial    # Not used
swpackage.psf@t{_}source@t{_}file                = -         # Not used
swpackage.software                       =           # Not used
swpackage.verbose                        = 1         # May be 1 2 or 3@r{
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .SS "Swbis Implementation"
@comment MAN2TEXI: EON

@node Swbis Implementation

@subsection Swbis Implementation

@comment TROFF INPUT: .PP

These extended options can be specified on the command line using -Woption=optionarg
or --option=optionarg syntax.
@comment TROFF INPUT: .PP

These options are set in the /usr/lib/swbis/swbisdefaults or the ~/.swbis/swbisdefaults
file.
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
swpackage.swbis@t{_}cksum                    = "false"   # true or false
swpackage.swbis@t{_}file@t{_}digests             = "false"   # true or false
swpackage.swbis@t{_}file@t{_}digests@t{_}sha2        = "false"   # true or false
swpackage.swbis@t{_}files                    = "false"   # true or false
swpackage.swbis@t{_}sign                     = "false"   # true or false
swpackage.swbis@t{_}archive@t{_}digests          = "false"   # true or false
swpackage.swbis@t{_}archive@t{_}digests@t{_}sha2     = "false"   # true or false
swpackage.swbis@t{_}gpg@t{_}name                 = ""
swpackage.swbis@t{_}gpg@t{_}path                 = "~/.gnupg"
swpackage.swbis@t{_}gzip                     = "false"   # true or false
swpackage.swbis@t{_}bzip2                    = "false"   # true or false
swpackage.swbis@t{_}numeric@t{_}owner            = "false"   # true or false
swpackage.swbis@t{_}absolute@t{_}names           = "false"   # true or false
swpackage.swbis@t{_}format                   = "ustar"  # gnutar or ustar

@comment WARNING: man/man8/swpackage.8:557:%%new font R started without closing previous font R

swpackage.swbis@t{_}signer@t{_}pgm               = "GPG" # GPG or PGP5 or PGP2.6}
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .SH "USAGE EXAMPLES"
@comment MAN2TEXI: EON

@node USAGE EXAMPLES

@section USAGE EXAMPLES

@comment TROFF INPUT: .PP

Here are some commonly used options.
@comment TROFF INPUT: .SS "Options and Option Files"
@c DEBUG: print_menu("USAGE EXAMPLES")

@ifnottex
@menu
* Options and Option Files::
* Preview the output::
* Create a signed package::
* Resign a package::
* Idempotent Invocation::
* ALternative Format Translation::

@end menu
@end ifnottex

@comment MAN2TEXI: EON

@node Options and Option Files

@subsection Options and Option Files

@comment TROFF INPUT: .PP

Show the option file options and the option files that determine the default
values.
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
	swpackage --show-options
		# and
	swpackage --show-options-files@r{
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .SS "Preview the output"
@comment MAN2TEXI: EON

@node Preview the output

@subsection Preview the output

@comment TROFF INPUT: .PP

Show a verbose tar-like file listing on stdout
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
	swpackage -pv
           # or

@comment WARNING: man/man8/swpackage.8:583:%%new font R started without closing previous font R

	swpackage -pvv }
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .SS "Create a signed package"
@comment MAN2TEXI: EON

@node Create a signed package

@subsection Create a signed package

@comment TROFF INPUT: .PP

Read the PSF on standard input, sign using 'admin' key using the gpg-agent.
Include sha2 digests for the files and archive. Include the file list,
compress the output using xz writing to standard output.
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
	swpackage -s - --sign --use-agent --gpg-name=admin --files \\
		--sha1 --sha2 --xz @@-@r{
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .SS "Resign a package"
@comment MAN2TEXI: EON

@node Resign a package

@subsection Resign a package

@comment TROFF INPUT: .PP

Resign a previously signed package, overwriting the original file
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display

@comment WARNING: man/man8/swpackage.8:604:%%new font R started without closing previous font R

	swpackage --resign -s foo.tar.gz --overwrite --recompress}
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP


@comment TROFF INPUT: .SS "Idempotent Invocation"
@comment MAN2TEXI: EON

@node Idempotent Invocation

@subsection Idempotent Invocation

@comment TROFF INPUT: .PP

Use special options to obtain an identical package two or more times
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
	swpackage --create-time=1406254892 \\
		--uuid=ed3b9432-3ba1-4c01-a125-e22fb94588e2 \\
		--pax-header-pid=1001@r{
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .SS "ALternative Format Translation"
@comment MAN2TEXI: EON

@node ALternative Format Translation

@subsection ALternative Format Translation

@comment TROFF INPUT: .PP

Execute the internally generated pipeline for format translation manually
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
	# the following is equivalent to  'swpackage --to-swbis'

          /usr/local/libexec/swbis/lxpsf --psf-form3 \\

@comment WARNING: man/man8/swpackage.8:628:%%new font R started without closing previous font R

                 -H ustar | swpackage -Wsource=- -s@@PSF}
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP


@comment TROFF INPUT: .SH "PACKAGE SIGNING"
@comment MAN2TEXI: EON

@node PACKAGE SIGNING

@section PACKAGE SIGNING

@comment TROFF INPUT: .PP

Support for embedded cryptographic signature
@comment TROFF INPUT: .SS "Description"
@c DEBUG: print_menu("PACKAGE SIGNING")

@ifnottex
@menu
* Description::
* Signature Generation::
* Passphrase Handling::

@end menu
@end ifnottex

@comment MAN2TEXI: EON

@node Description

@subsection Description

@comment TROFF INPUT: .PP

Package signing is accomplished by including, as a package attribute, a detached signature
in the package metadata (the catalog section of the package).
The signed data is the catalog section of the package (see sw(5) for a description) excluding the
signature files archive header and data.  The package leading directory that does not contain
the /catalog/ directory in its name is not included in the signed stream.
The signed stream is terminated by two (2) null tar blocks (which are not in the
actual package file).
The storage section (or payload) of the package is included in the signed data by
computing its md5 and sha1 message digests and storing these as attributes in the catalog section.
@comment TROFF INPUT: .SS "Signature Generation"
@comment MAN2TEXI: EON

@node Signature Generation

@subsection Signature Generation

@comment TROFF INPUT: .PP

The signature is generated by the file system signing utility.  Currently, swpackage supports
GPG PGP-2.6 and PGP-5.  The default is GPG but can be selected using the
@b{-Wsigner-pgm} command line option and the
@b{swpackage.swbis@t{_}signer@t{_}pgm} defaults file option.  The options and program can the displayed with the
@b{-Wshow-signer-pgm} option.
The options in each case produce a detached ascii-armored signature.  The maximum
length for the ascii armored file is 1023 bytes.
@comment TROFF INPUT: .SS "Passphrase Handling"
@comment MAN2TEXI: EON

@node Passphrase Handling

@subsection Passphrase Handling

@comment TROFF INPUT: .PP

The passphrase can be read from the tty, a file descriptor, and environment variable or
the GNUpg passphrase agent.  These are controlled by the options or the environment
variables SWPACKAGEPASSFD and SWPACKAGEPASSPHRASE.  Placing your passphrase in an
environment variable is insecure but may be usefull to sign packages with a test key
and later replace it [when on a different host for example].
@comment TROFF INPUT: .SH "SIGNATURE VERIFICATION"
@comment MAN2TEXI: EON

@node SIGNATURE VERIFICATION

@section SIGNATURE VERIFICATION

@comment TROFF INPUT: .PP

swpackage does not perform verification of the embedded
cryptographic signature, although, a description is included here
for completness.
@comment TROFF INPUT: .SS "Overview"
@c DEBUG: print_menu("SIGNATURE VERIFICATION")

@ifnottex
@menu
* Overview::
* Manual Verification::
* Manual Verification Using Standard Tools::

@end menu
@end ifnottex

@comment MAN2TEXI: EON

@node Overview

@subsection Overview

@comment TROFF INPUT: .PP

Verification requires verifying the payload section md5 and sha1 message digests and then verifying the
signature.  Naturally, it is required that the signed data include the payload messages digests.
See
swverify.
@comment TROFF INPUT: .SS "Manual Verification"
@comment MAN2TEXI: EON

@node Manual Verification

@subsection Manual Verification

@comment TROFF INPUT: .PP

Verification requires re-creating the signed and digested byte streams from the archive file.
This is not possible using any known extant tar reading utility because of a lack of ability to
write selected archive members to stdout instead of installing in the file system; however, the
swverify utility can be used to write these bytes streams to stdout
allowing manual inspection and verification.
See
swverify.
@comment TROFF INPUT: .SS "Manual Verification Using Standard Tools"
@comment MAN2TEXI: EON

@node Manual Verification Using Standard Tools

@subsection Manual Verification Using Standard Tools

@comment TROFF INPUT: .PP

Verification using standard GNU/Linux tools is possible if the archive is installed in the file system.
Success depends on the following factors:
@comment TROFF INPUT: .br
@comment .br
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
1) The tar utility preserves modification times
   (e.g. not GNU tar 1.3.19).
2) The archive does not contain Symbolic Links
   (see sw(5) for explanation).
3) The file system is a Unix file system (e.g. ext2).
4) The package was created using -Wformat=gnutar or, -Wformat=ustar
   with no file name longer than 99 octets.@r{
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

 Recreating the signed and digested byte streams is then accomplished using GNU tar and the file list stored in

@comment WARNING: man/man8/swpackage.8:699:%%new font I started without closing previous font R

the \<}@i{path}\>/catalog/dfiles/files attribute file as follows:
@comment TROFF INPUT: .PP

In this example, the package has a single path name prefix called, @b{namedir} and
the file owner/group are root.  These restrictions are suited to source packages.
@comment TROFF INPUT: .br
@comment .br
Verify the signature:
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
  #!/bin/sh
  tar cf - -b1 --owner=root --group=root \\
  --exclude=namedir/catalog/dfiles/signature  \\
  namedir/catalog | gpg --verify namedir/catalog/dfiles/signature -@r{
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

 If this fails try using GNU tar option --posix.
If this fails then you are out of luck as nothing in the catalog section can be trusted.
@comment TROFF INPUT: .PP

Verify the payload digests:
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
  #!/bin/sh
  grep -v namedir/catalog  namedir/catalog/dfiles/files | \\
  tar cf - -b1 --owner=root --group=root \\
  --no-recursion --files-from=- | md5sum

@comment WARNING: man/man8/swpackage.8:723:%%new font R started without closing previous font R

  cat namedir/catalog/dfiles/md5sum}
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

 Likewise for the sha1 digest.
@comment TROFF INPUT: .PP

If the package has symbolic links, Verify the adjunct@t{_}md5sum:
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
  #!/bin/sh
  grep -v namedir/catalog  namedir/catalog/dfiles/files | \\
  ( while read file; do if [ ! -h $file ]; then echo $file; fi done; )|\\
  tar cf - -b1 --owner=root --group=root \\
  --no-recursion --files-from=- | md5sum
  cat namedir/catalog/dfiles/adjunct@t{_}md5sum@r{
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

 The symbolic link files must be verified manually by comparing to the INFO file
information.
@comment TROFF INPUT: .SH "SWPACKAGE OUTPUT FORMAT"
@comment MAN2TEXI: EON

@node SWPACKAGE OUTPUT FORMAT

@section SWPACKAGE OUTPUT FORMAT


@comment TROFF INPUT: .PP

@comment TROFF INPUT: .br
@comment .br
The output format is either one of two formats specified in POSIX.1 (ISO/IEC 9945-1)
which are tar (header magic=ustar) or cpio (header magic=070707).
The default format of the swbis implementation is "ustar".
The POSIX spec under specifies definitions for some of the ustar header fields.
The personality of the default swbis ustar format mimics GNU tar 1.15.1 and is designed
to be compliant to POSIX.1.
The personality of the "ustar0" format mimics, for pathnames less than
99 octets,  GNU tar 1.13.25 using the "-b1 --posix" options.
This bit-for-bit sameness does not exist for pathnames greater than 99 chars as swbis
follows the POSIX spec and GNU tar 1.13.25 does not.  The "ustar0" ustar personality is
deprecated.  It is only slightly different from 'ustar' in how device number fields are
filled (with spaces, zeros or NULs) for non-device files.
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .br
@comment .br
In addition the swbis implementation
supports several other tar variants including bit-for-bit mimicry of GNU tar (1.13.25) default
format which uses a non-standard name split and file type (type 'L').  This format is known as '--format=oldgnu'.
Also supported is the gnu format of GNU tar 1.15.1 specified by '--format=gnu'
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .br
@comment .br
The defacto cpio formats are also supported.
"new ASCII" (sometimes called SVR4 cpio) and "crc" cpio formats with header magic "070701" and "070702"
respectively.
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .br
@comment .br
Support for "pax Interchange Format" (Extended header tar) described in IEEE 1003.1-2001
under the "pax" manual page has been implemented for POSIX file attributes as of release 1.12 (c Aug2014).
The 'swpackage' utility will generate extended headers on an as needed basis when the --format=pax is used.
Support for POSIX ACL and SELinux attributes is planned.
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .br
@comment .br
The entirety of the output byte stream is a single valid file of one the formats mentioned above.
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .br
@comment .br
The swbis implementation writes its output to stdout.  The default output block size is 10240 bytes.
The last block is not padded and therefore the last write(2) may be a short write.
The selected block size does not affect the output file contents.
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .br
@comment .br
The swbis implementation is biased, in terms of capability and default settings, to the tar format.
Package signing is only supported in tar format.
@comment TROFF INPUT: .SH "SWPACKAGE INPUT FILE FORMAT"
@c DEBUG: print_menu("SWPACKAGE OUTPUT FORMAT")
@comment MAN2TEXI: EON

@node SWPACKAGE INPUT FILE FORMAT

@section SWPACKAGE INPUT FILE FORMAT


@comment TROFF INPUT: .PP

The input file is called a product specification file or PSF.  It contains information to
direct swpackage and information that is package meta-data [that is merely transferred unchanged
into the global INDEX file].
@comment TROFF INPUT: .PP

A PSF may contain object keywords, attributes (keyword/value pairs) and Extended Definitions (described below).
An object keyword connotes a logical object (i.e. software structure) supported by the standard.  An object keyword
does not have a value field after it, as it contains Attributes and Extended Definitions.
An attribute keyword conotes an attribute which is always in the form of a keyword/value pair.
@comment TROFF INPUT: .PP

Attribute keywords not recognized by the standard are allowed and are transferred into the INDEX file.
Object keywords not recognized by the standard are not allowed and will generate an error.
Extended Definitions may only appear in a PSF (never in a INDEX or INFO created by swpackage).
Extended Definitions are translated [by swpackage] into object keywords (objects) and
attributes recognized by the standard.
@comment TROFF INPUT: .PP

Comments in a PSF are not transferred into the INDEX file by the swbis implementation of swpackage.
@comment TROFF INPUT: .PP


@comment WARNING: man/man8/swpackage.8:806:%%new font B started without closing previous font R

The file syntax is the same as a }@b{INDEX}, or @b{INFO} file.
A PSF may contain all objects defined by the standard as well as extended definitions.
@comment TROFF INPUT: .br
@comment .br

For additional information see
@comment TROFF INPUT: .br
@comment .br
XDSA C701 http://www.opengroup.org/publications/catalog/c701.htm, or
@comment TROFF INPUT: .br
@comment .br
sw manual page.
@comment TROFF INPUT: .SS "EXTENDED DEFINITIONS"
@c DEBUG: print_menu("SWPACKAGE INPUT FILE FORMAT")

@ifnottex
@menu
* EXTENDED DEFINITIONS::
* o Extended Control File Definitions::
* o Directory Mapping::
* o Recursive File Definition::
* o Explicit File Definition::
* o Default Permission Definition::
* o Excluding Files::
* o Including Files::
* SWBIS PSF CONVENTIONS::
* o Distribution Attributes::
* o Bundle Attributes::
* o Product Attributes::
* o Fileset Attributes::
* o Example Source Package PSF::
* o Example Runtime (Binary) Package PSF::

@end menu
@end ifnottex

@comment MAN2TEXI: EON

@node EXTENDED DEFINITIONS

@subsection EXTENDED DEFINITIONS


@comment TROFF INPUT: .PP

A Product Specification File (PSF) can contain Extended Definitions in the
@b{fileset}, @b{product} or @b{bundle} software definitions.  They would have the same level or containment
relationship as a
@b{file} or
@b{control@t{_}file} definition in the same contaning object.
@comment TROFF INPUT: .PP

Extended Definitions represent a minimal, expressive form for specifying files and file attributes.
Their use in a PSF is optional in that an equivalent PSF can be constructed without using them,
however, their use is encouraged for the sake of brevity and orthogonality.
@comment TROFF INPUT: .PP

The swbis implementation requires that no [ordinary] attributes appear after Extended Definitions
in the containing object, and, requires that Extended Definitions appear before logically contained objects.
That is, the parser uses the next object keyword to syntacticly and logically terminate the
current object even if the current object has logically contained objects.
@comment TROFF INPUT: .SS "o  Extended Control File Definitions"
@comment MAN2TEXI: EON

@node o Extended Control File Definitions

@subsection o  Extended Control File Definitions

@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display

@comment TROFF INPUT: .br
@comment .br
     checkinstall  @i{source}  [@i{path}]
     preinstall    @i{source}  [@i{path}]
     postinstall   @i{source}  [@i{path}]
     verify        @i{source}  [@i{path}]
     fix           @i{source}  [@i{path}]
     checkremove   @i{source}  [@i{path}]
     preremove     @i{source}  [@i{path}]
     postremove    @i{source}  [@i{path}]
     configure     @i{source}  [@i{path}]
     unconfigure   @i{source}  [@i{path}]
     request       @i{source}  [@i{path}]
     unpreinstall  @i{source}  [@i{path}]
     unpostinstall @i{source}  [@i{path}]
     space         @i{source}  [@i{path}]
     control@t{_}file  @i{source}  [@i{path}]@r{
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .PP


@comment WARNING: man/man8/swpackage.8:855:%%new font I started without closing previous font R

The }@i{source} attribute defines the location in distributors's development system
where the swpackage utility will find the script.  The keyword is the value of the
@i{tag} attribute
and tells the utilities when to execute the script.
The @i{path} attribute is optional and specifies the file name in the packages distribution
relative to the control@t{_}directory for software containing the script. If not given the
@i{tag} value is used as the filename.
@comment TROFF INPUT: .SS "o  Directory Mapping"
@comment MAN2TEXI: EON

@node o Directory Mapping

@subsection o  Directory Mapping

@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display

@comment TROFF INPUT: .br
@comment .br
   directory  @i{source}  [@i{destination}]
@comment TROFF INPUT: .br
@comment .br
@r{
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .PP


@comment WARNING: man/man8/swpackage.8:873:%%new font I started without closing previous font R

Applies the }@i{source} attribute as the directory under which
the subsequently listed files are located.  If
@i{destination} is defined it will be used as a prefix to the
@i{path} (implied) file definition.
@i{source} is typically a temporary or build
location and
@i{dest} is its unrealized absolute pathname destination.
@comment TROFF INPUT: .SS "o  Recursive File Definition"
@comment MAN2TEXI: EON

@node o Recursive File Definition

@subsection o  Recursive File Definition

@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display

@comment TROFF INPUT: .br
@comment .br
  file *
@comment TROFF INPUT: .br
@comment .br
@r{
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .PP

Specifies every file in current source directory.

@comment WARNING: man/man8/swpackage.8:892:%%new font I started without closing previous font R

The }@i{directory} extended definition must be used before the recursive specification.
@comment TROFF INPUT: .SS "o  Explicit File Definition"
@comment MAN2TEXI: EON

@node o Explicit File Definition

@subsection o  Explicit File Definition

@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display

@comment TROFF INPUT: .br
@comment .br
  file [-t @i{type}] [-m @i{mode}] [-o @i{owner}[,@i{uid}]] [-g @i{group}[,@i{gid}]] [-n] [-v] source [@i{path}]
@comment TROFF INPUT: .br
@comment .br
@r{
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .PP


@comment WARNING: man/man8/swpackage.8:904:%%new font B started without closing previous font R

}@b{source}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation

@comment TROFF INPUT: .PP

@i{source} defines the pathname of the file to be used as the source of file data
and/or attributes.
If it is a relative path, then swpackage searches for this file relative to the
the source argument of the @b{directory} keyword, if set.
If @b{directory} keyword is not set then the search is relative to the
current working directory of the swpackage utility's invocation.
@comment TROFF INPUT: .PP

All attributes for the destination file are taken from the source file, unless a
@b{file@t{_}permissions} keyword is active, or the -m, -o, or -g options are also
included in the file specification.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{path}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation

@i{path} defines the destination path where the file will be created or installed.
If it is a relative path, then the destination path of the of the
@b{directory} keyword must be active and will be used as the path prefix.
If path is not specified then
@i{source} is used as the value of path and directory mapping applied (if active).
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-t type}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation

@i{type} may one of 'd' (directory), or  'h' (hard link), or 's' (symbolic link).
@comment TROFF INPUT: .PP

-t d  Create a directory.
@comment TROFF INPUT: .br
@comment .br
If @i{path} is not specified
@i{source} is used as the path attribute.
@comment TROFF INPUT: .PP

-t h  Create a hard link.
@comment TROFF INPUT: .br
@comment .br
@i{path} and @i{source} are specified.
@i{source} is used as the value of the
@i{link@t{_}source} attribute, and
@i{path} is the value of the path attribute.
@comment TROFF INPUT: .PP

-t s  Create a symbolic link.
@comment TROFF INPUT: .br
@comment .br
@i{path} and @i{source} are specified.
@i{source} is used as the value of the
@i{link@t{_}source} attribute, and
@i{path} is the value of the path attribute.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-m mode}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation

@i{mode} defines the octal mode for the file.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .SS "o  Default Permission Definition"
@comment MAN2TEXI: EON

@node o Default Permission Definition

@subsection o  Default Permission Definition

@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display

@comment TROFF INPUT: .br
@comment .br
  file@t{_}permissions [-m @i{mode}] [-u @i{umask}] [-o [@i{owner}[,]][@i{uid}]] [-g [@i{group}[,]][@i{gid}]]
@comment TROFF INPUT: .br
@comment .br
@r{
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .PP

Applies to subsequently listed file definitions in a fileset.
These attributes will apply where the file attributes were not specified explicitly in a
file definition.

@comment WARNING: man/man8/swpackage.8:974:%%new font B started without closing previous font R

Subsequent }@b{file@t{_}permissions} definitions
simply replace previous definitions (resetting all the options).
@comment TROFF INPUT: .PP

To reset the file@t{_}permission state (i.e. turn it off) use one of the following:
    file@t{_}permissions ""
@comment TROFF INPUT: .br
@comment .br
	or the preferred way is
@comment TROFF INPUT: .br
@comment .br
    file@t{_}permissions -u 000
@comment TROFF INPUT: .SS "o  Excluding Files"
@comment MAN2TEXI: EON

@node o Excluding Files

@subsection o  Excluding Files

@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display

@comment TROFF INPUT: .br
@comment .br
   exclude source
@comment TROFF INPUT: .br
@comment .br
@r{
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .PP

Excludes a previously included file or an entire directory.
@comment TROFF INPUT: .br
@comment .br
@comment TROFF INPUT: .SS "o  Including Files"
@comment MAN2TEXI: EON

@node o Including Files

@subsection o  Including Files

@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display

@comment TROFF INPUT: .br
@comment .br

@comment WARNING: man/man8/swpackage.8:1001:%%new font I started without closing previous font R

   include <}@i{filename}
@comment TROFF INPUT: .br
@comment .br
@r{
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .PP


@comment WARNING: man/man8/swpackage.8:1007:%%new font I started without closing previous font R

The contents of }@i{filename} may be more definitions for files.
The syntax of the included file is PSF syntax.
@comment TROFF INPUT: .br
@comment .br

@comment TROFF INPUT: .SS "SWBIS PSF CONVENTIONS"
@comment MAN2TEXI: EON

@node SWBIS PSF CONVENTIONS

@subsection SWBIS PSF CONVENTIONS


@comment TROFF INPUT: .PP

This section describes attribute usage and conventions imposed by the swbis implementation.
Not all attributes are listed here.  Those that are have important effects or
particular interest.
@comment TROFF INPUT: .SS "o Distribution Attributes"
@comment MAN2TEXI: EON

@node o Distribution Attributes

@subsection o Distribution Attributes

@comment TROFF INPUT: .PP

The standard defines a limited set of attributes for the distribution object.
An expanded set is suggested by the informative annex however a conforming
implementation is not required act on them.  The reason for this is a
distribution may be acted upon by a conforming utility in such a way that attributes
of the @b{distribution} become invalid.
For this reason, some attributes that refer to an entire "package" [in other package managers]
are referred from the product object and attain their broadened scope by the distributor's
convention that their distribution contains just one
@b{product}.
@comment TROFF INPUT: .PP

For example, the package NAME and VERSION are referred from the product tag and revision,
not the distribution's.  This convention supports multiple products in a distribution and
is consistent with the standard.
@comment TROFF INPUT: .PP

@b{tag}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation

@i{tag} is the short, file system friendly, name of the distribution.
Providing a distribution tag is optional.  The swbis implementation will use this as the
[single] path name prefix if there is no distribution.control@t{_}directory attribute.
A distribution tag attribute and swpackage's response to it is an implementation extension.
The leading package path can also be controlled with the ''-W dir'' option.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------

@comment TROFF INPUT: .PP

@b{control@t{_}directory}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation

@i{control@t{_}directory}, in a distribution object, is the constant leading package path.
Providing this attribute is optional.
A distribution control@t{_}directory attribute and swpackage's response to it is an implementation extension.
The leading package path can also be controlled with the ''-W dir'' option.  This attribute will be
generated by swpackage if not set in a PSF.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------

@comment TROFF INPUT: .SS "o Bundle Attributes"
@comment MAN2TEXI: EON

@node o Bundle Attributes

@subsection o Bundle Attributes

@comment TROFF INPUT: .PP

A @b{bundle} defines a collection of products whether or not
the distribution has all the products present.
@comment TROFF INPUT: .PP

@b{tag}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation

@i{tag} is the short, file system friendly, name of the bundle.
This value is used by the swbis implementation as a path name component in the
installed software catalog.  If it is not present the product tag is used.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------

@comment TROFF INPUT: .SS "o Product Attributes"
@comment MAN2TEXI: EON

@node o Product Attributes

@subsection o Product Attributes

@comment TROFF INPUT: .PP

A @b{product} defines the software product.
@comment TROFF INPUT: .br
@comment .br
@comment TROFF INPUT: .PP

@b{tag}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation

@i{tag} is the short, file system friendly, name of the product.
This value is used by the swbis implementation as a path name component in the
installed software catalog.  It is required.  The swbis implementation uses it in a way
that is analogous to the RPMTAG@t{_}NAME attribute, namely as the public recognizable name of
the package.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------

@comment TROFF INPUT: .PP

@b{control@t{_}directory}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation

Is the directory name in the distribution under which the product contents are located.
This value has no affect on the installed software catalog.  If it is not given in a PSF
then the
@i{tag} is used.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------

@comment TROFF INPUT: .PP

@b{revision}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation

Is the product revision.  It should not contain a "RELEASE" attribute part or other
version suffix modifiers.
This value is used by the swbis implementation as a path name component in the
installed software catalog.  It is required by swinstall.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------

@comment TROFF INPUT: .PP

@b{vendor@t{_}tag}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation

This is a short identifying name of the distributor that supplied the product and
may associate (refer to) a @b{vendor} object from the INDEX file that
has a matching tag attribute.
This attribute is optional.
This attribute value should strive to be unique among all distributors. The swbis implementation
modifies the intended usage slightly as a string that strives to be globally unique for a given
product.@b{tag} and product.@b{revision}.
In this capacity it serves to distinguish products with the same revision and tag from the same or
different distributor.  It most closely maps to the RPMTAG@t{_}RELEASE or "debian@t{_}revision" attributes.
It is one of the version distinguishing attributes of a product specified by the standard.
It is transfered into the installed@t{_}software catalog (not as a path name component) by swinstall.
If this attribute exists there should also be a
@b{vendor} object in the PSF in the distribution object that has this tag.
This attribute is assigned the value of RPMTAG@t{_}RELEASE by
swpackage when translating an RPM.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------

@comment TROFF INPUT: .PP

@b{architecture}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation

This string is one of the version attributes.  It is used to disambiguate
products that have the same @b{tag}, @b{revision} and @b{vendor@t{_}tag}.  It is not used for determining a products
compatibility with a host.
The form is implementation defined.
swbis uses the output of GNU @b{config.guess} as the value of
this string.  A wildcard pattern should not be used.
The canonical swbis architecture string can be
listed with @b{swlist}. For example
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
swlist -a architecture @@ localhost@r{
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

 Here are some example outputs from real systems.
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
    System      `uname -srm`              architecture
Red Hat 8.0:  Linux 2.4.18 i686        i686-pc-linux-gnu
OpenSolaris:  SunOS 5.11 i86pc         i386-pc-solaris2.11
NetBSD 3.1:   NetBSD 3.1 i386          i386-unknown-netbsdelf3.1
Red Hat 4.1:  Linux 2.0.36 i586        i586-pc-linux-gnulibc1

@comment WARNING: man/man8/swpackage.8:1148:%%new font R started without closing previous font R

Debian 3.1:   Linux 2.6.8-2-386 i686   i686-pc-linux-gnu}
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------

@comment TROFF INPUT: .PP

@b{os@t{_}name}
@b{os@t{_}release}
@b{os@t{_}version}
@b{machine@t{_}type}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation

These attributes are used to determine compatibility with a host.
They correspond to the @b{uname} attributes defined by POSIX.1.
If an value is nil or non-existent it is assumed to match the host.
All attributes must match for there to be compatibility.  Distributors may
wish to make these values a shell pattern in their PSF's so to match
the intended collection of hosts.
swbis uses @b{fnmatch} (with FLAGS=0) to determine a match.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------

@comment TROFF INPUT: .SS "o Fileset Attributes"
@comment MAN2TEXI: EON

@node o Fileset Attributes

@subsection o Fileset Attributes

@comment TROFF INPUT: .PP

A @b{fileset} defines the fileset.
@comment TROFF INPUT: .br
@comment .br
@comment TROFF INPUT: .PP

@b{tag}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation

@i{tag} is the short, file system friendly, name of the fileset.
It is required although selection of filesets is  not yet supported therefore the end user
will have little to do with the fileset tag.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{control@t{_}directory}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation

Is the directory name in the product under which the fileset contents are located.
This value has no affect on the installed software catalog.  If it is not given in a PSF
then the
@i{tag} is used.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .SS "o Example Source Package PSF"
@comment MAN2TEXI: EON

@node o Example Source Package PSF

@subsection o Example Source Package PSF

@comment TROFF INPUT: .PP

This PSF packages every file is current directory. It uses nil control directories
so the package structure does not change relative to a vanilla tarball.
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display

@comment TROFF INPUT: .br
@comment .br
 distribution
   description "fooit - a program from fooware
that does everything."
   title "fooit - a really cool program"
   COPYING < /usr/local/fooware/legalstuff/COPYING
 vendor
   the@t{_}term@t{_}vendor@t{_}is@t{_}misleading false
   tag fooware
   title fooware Consultancy Services, Inc.
   description ""
 vendor
   the@t{_}term@t{_}vendor@t{_}is@t{_}misleading true
   tag myfixes1
   title Bug fixes, Set 1
   description "a place for more detailed description"
 product
   tag fooit
   control@t{_}directory ""
   revision 1.0
   vendor@t{_}tag myfixes1  # Matches the vendor object above
 fileset
    tag fooit-SOURCE
    control@t{_}directory ""
    directory .
    file *
    exclude catalog@r{
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP


@comment TROFF INPUT: .SS "o Example Runtime (Binary) Package PSF"
@comment MAN2TEXI: EON

@node o Example Runtime (Binary) Package PSF

@subsection o Example Runtime (Binary) Package PSF

@comment TROFF INPUT: .PP

This is a sample PSF for a runtime package.  It implies multiple products (e.g. sub-packages)
using the bundle.contents attribute.  Since the bundle and product tags exist in a un-regulated
namespace and are seen by end users they should be carefully chosen.   Note that the bundle
and product have the same tag which may force downstream users to disambiguate using software
selection syntax such as fooit,bv=* or fooit,pv=* .
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display

@comment TROFF INPUT: .br
@comment .br
 distribution
   description "fooit - a program from fooware
that does everything."
   title "fooit - a really cool program"
   COPYING < /usr/local/fooware/legalstuff/COPYING

     vendor
        the@t{_}term@t{_}vendor@t{_}is@t{_}misleading false
        tag fooware
        title fooware Consultancy Services, Inc.
        description "Provider of the programs
 that do everything"

     vendor
        the@t{_}term@t{_}vendor@t{_}is@t{_}misleading true
         tag fw0
         title fooware fixes
         description "More fixes from the fooware users"

#  Bundle definition:  Use a bundle
     bundle
         tag fooit
         vendor@t{_}tag fooware
         contents fooit,v=fw0 fooit-devel fooit-doc

#  Product definition:
     product
         tag fooit   # This is the package name
         revision 1.0 # This is the package version
         vendor@t{_}tag fw0 # This is a release name e.g. RPMTAG@t{_}RELEASE
         postinstall scripts/postinstall
     fileset
          tag fooit-RUN
          file doc/man/man1/fooit.1 /usr/man/man1/fooit.1

@comment WARNING: man/man8/swpackage.8:1272:%%new font R started without closing previous font R

          file src/fooit /usr/bin/fooit}
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP


@comment TROFF INPUT: .SH "SAMPLE PRODUCT SPEC FILES "
@comment MAN2TEXI: EON

@node SAMPLE PRODUCT SPEC FILES

@section SAMPLE PRODUCT SPEC FILES


@comment TROFF INPUT: .PP

This section shows several example PSF files.
@comment TROFF INPUT: .SS "o   A minimal PSF to package all files in current directory\&."
@c DEBUG: print_menu("SAMPLE PRODUCT SPEC FILES")

@ifnottex
@menu
* o A minimal PSF to package all files in current directory ::
* o A PSF that uses directory mapping ::
* o Create a PSF from a list of files ::

@end menu
@end ifnottex

@comment MAN2TEXI: EON

@node o A minimal PSF to package all files in current directory

@subsection o   A minimal PSF to package all files in current directory.

@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
 distribution
 product
   tag prod
   control@t{_}directory ""
   revision 1.0
 fileset
    tag files
    control@t{_}directory ""
    directory .
    file *@r{
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .SS "o   A PSF that uses directory mapping\&."
@comment MAN2TEXI: EON

@node o A PSF that uses directory mapping

@subsection o   A PSF that uses directory mapping.

@comment TROFF INPUT: .PP

This PSF creates a package with live system paths from source that is installed
in non-live temporary locations. It is modeled on the swbis source package.
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
 distribution
 product
   tag somepackage  # this is the package name
   control@t{_}directory ""
   revision 1.0  # this is the package revision
 fileset
    tag files
    control@t{_}directory ""

    file@t{_}permissions -o root -g root
    directory swprogs /usr/bin
    file swpackage
    file swinstall
    file swverify

    file -m 755 -o root -g root / /usr/libexec/swbis

    directory swprogs /usr/libexec/swbis
    file swbisparse

    directory swsupplib/progs /usr/libexec/swbis
    file swbistar

    file -m 755 -o root -g root / /usr/share/doc/swbis
    directory . /usr/share/doc/swbis
    file -m 444 ./README

@comment WARNING: man/man8/swpackage.8:1327:%%new font R started without closing previous font R

    file -m 444 CHANGES}
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

When this PSF is processed by the command:
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
            swpackage -Wsign -s - @@- | tar tvf -@r{
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

It produces the following:
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
 drwxr-x--- root/root      0 2003-06-03 ... catalog/
 -rw-r----- root/root    307 2003-06-03 ... catalog/INDEX
 drwxr-x--- root/root      0 2003-06-03 ... catalog/dfiles/
 -rw-r----- root/root     65 2003-06-03 ... catalog/dfiles/INFO
 -rw-r----- root/root     33 2003-06-03 ... catalog/dfiles/md5sum
 -rw-r----- root/root     41 2003-06-03 ... catalog/dfiles/sha1sum
 -rw-r----- root/root     33 2003-06-03 ... catalog/dfiles/adjunct@t{_}md5sum
 -rw-r----- root/root    512 2003-06-03 ... catalog/dfiles/sig@t{_}header
 -rw-r----- root/root   1024 2003-06-03 ... catalog/dfiles/signature
 drwxr-x--- root/root      0 2003-06-03 ... catalog/pfiles/
 -rw-r----- root/root     65 2003-06-03 ... catalog/pfiles/INFO
 -rw-r----- root/root   1503 2003-06-03 ... catalog/INFO
 -rwxr-xr-x root/root 510787 2003-06-03 ... usr/bin/swpackage
 -rwxr-xr-x root/root 301255 2003-06-03 ... usr/bin/swinstall
 -rwxr-xr-x root/root   4105 2003-06-03 ... usr/bin/swverify
 drwxr-xr-x root/root      0 2003-06-03 ... usr/libexec/swbis/
 -rwxr-xr-x root/root 365105 2003-06-03 ... usr/libexec/swbis/swbisparse
 -rwxr-xr-x root/root 243190 2003-06-03 ... usr/libexec/swbis/swbistar
 drwxr-xr-x root/root      0 2003-06-03 ... usr/share/doc/swbis/
 -r--r--r-- root/root   8654 2003-05-27 ... usr/share/doc/swbis/README

@comment WARNING: man/man8/swpackage.8:1359:%%new font R started without closing previous font R

 -r--r--r-- root/root  10952 2003-06-03 ... usr/share/doc/swbis/CHANGES}
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .SS "o   Create a PSF from a list of files\&."
@comment MAN2TEXI: EON

@node o Create a PSF from a list of files

@subsection o   Create a PSF from a list of files.

@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
           find . -print |  swpackage -Wfiles-from=- -Wlist-psf@r{
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP


@comment TROFF INPUT: .SH "RETURN VALUE"
@comment MAN2TEXI: EON

@node RETURN VALUE

@section RETURN VALUE

@comment TROFF INPUT: .PP

0 on success, 1 on error and target medium not modified, 2 on error if
target medium modified.
@comment TROFF INPUT: .SH "SIDE EFFECTS"
@c DEBUG: print_menu("RETURN VALUE")
@comment MAN2TEXI: EON

@node SIDE EFFECTS

@section SIDE EFFECTS

 No temporary files are used in the package generation process.
When using the default target of stdout (directed to /dev/null), there
are no file system side effects from swpackage.  GNU Privacy Guard (gpg)
may alter its keys when invoked for package signing.
@comment TROFF INPUT: .SH "ENVIRONMENT"
@c DEBUG: print_menu("SIDE EFFECTS")
@comment MAN2TEXI: EON

@node ENVIRONMENT

@section ENVIRONMENT

@comment TROFF INPUT: .PP


@comment WARNING: man/man8/swpackage.8:1380:%%new font B started without closing previous font R

}@b{SWPACKAGEPASSFD}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Sets the @i{--passphrase-fd} option.  Set the option arg
to a integer value of the file descriptor, or to "env" to read the passphrase from
the environment variable SWPACKAGEPASSPHRASE, or to "agent" to cause gpg to use
gpg-agent, or to "tty" to restore default behavoir to reading passphrase from the terminal.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------

@comment TROFF INPUT: .PP

@b{SWPACKAGEPASSPHRASE}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Use the value as the passphrase if @i{--passphrase-fd} is
set to "env"
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------

@comment TROFF INPUT: .PP

@b{GNUPGHOME}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Sets the --gpg-home option.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------

@comment TROFF INPUT: .PP

@b{GNUPGNAME}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Sets the --gpg-name option, which is turn set the --local-user option of gpg.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------

@comment TROFF INPUT: .SH "REQUISITE UTILITIES"
@c DEBUG: print_menu("ENVIRONMENT")
@comment MAN2TEXI: EON

@node REQUISITE UTILITIES

@section REQUISITE UTILITIES

@comment TROFF INPUT: .PP

Swpackage does not use any archive writing utilities, it has its own code to
generate archives.
@comment TROFF INPUT: .br
@comment .br
Package signing uses one of the following:
 /usr/bin/gpg
 /usr/bin/pgp   (PGP 2.6.x)
 /usr/bin/pgps  (PGP 5)
@comment TROFF INPUT: .PP

Swpackage will use /usr/bin/uuidgen if present to create the uuid.
@comment TROFF INPUT: .SH "FILES"
@c DEBUG: print_menu("REQUISITE UTILITIES")
@comment MAN2TEXI: EON

@node FILES

@section FILES

@comment TROFF INPUT: .PP

@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
libdir/swbis/swdefaults
libbir/swbis/swbisdefaults
$HOME/.swbis/swdefaults
$HOME/.swbis/swbisdefaults@r{
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .SH "APPLICABLE STANDARDS"
@c DEBUG: print_menu("FILES")
@comment MAN2TEXI: EON

@node APPLICABLE STANDARDS

@section APPLICABLE STANDARDS

@comment TROFF INPUT: .PP

ISO/IEC 15068-2:1999, Open Group CAE C701.
@comment TROFF INPUT: .SH "SEE ALSO"
@c DEBUG: print_menu("APPLICABLE STANDARDS")
@comment MAN2TEXI: EON

@node SEE ALSO

@section SEE ALSO

@comment TROFF INPUT: .PP

info swbis
@comment TROFF INPUT: .PP

sw(5), swbis(1), swpackage(5), swbisparse(1), swign(1), swverify(8)
@comment TROFF INPUT: .SH "IDENTIFICATION"
@c DEBUG: print_menu("SEE ALSO")
@comment MAN2TEXI: EON

@node IDENTIFICATION

@section IDENTIFICATION

 swpackage(8): The packaging utility of the swbis project.
 Author: Jim Lowe   Email: jhlowe at acm.org
 Version: 1.13.1
 Last Updated: 2014-07-15
 Copying: GNU Free Documentation License
@comment TROFF INPUT: .SH "BUGS"
@c DEBUG: print_menu("IDENTIFICATION")
@comment MAN2TEXI: EON

@node BUGS

@section BUGS

@comment TROFF INPUT: .PP

A comment after an object keyword is wrongly not allowed by this PSF parser.
The --dir="" does not do what one would expect sometimes.
The output stream content is unaffected by the blocksize, that is the last write
may be short write.
Signing is broken for cpio format archives.
@comment  created by instant / docbook-to-man, Fri 02 Nov 2018, 20:39
@bye
