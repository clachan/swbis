\input texinfo   @c -*-texinfo-*-
@setfilename swlist.info
@comment direntry.in
@dircategory Individual utilities
@direntry
* swlist: (swbis).               list POSIX format packages
@end direntry
@comment ===============================================================
@comment WARNING: Do NOT edit this file.  It was produced automatically
@comment by man2info on Fri Nov  2 20:39:30 EDT 2018
@comment for jhl@
@comment from man/man8/swlist.8
@comment in /home/jhl/swbis-1.13.1/doc
@comment ===============================================================

@comment @documentencoding ISO-8859-1

@comment troff -man typesetting style: headers, footers, no paragraph indentation

@paragraphindent none

@iftex
@parskip = 0.5@normalbaselineskip plus 3pt minus 1pt
@end iftex

@set lq ``
@set rq ''

@comment TROFF INPUT: ...\" $Header: /usr/src/docbook-to-man/cmd/RCS/docbook-to-man.sh,v 1.3 1996/06/17 03:36:49 fld Exp $
@comment ...\" $Header: /usr/src/docbook-to-man/cmd/RCS/docbook-to-man.sh,v 1.3 1996/06/17 03:36:49 fld Exp $
@comment TROFF INPUT: ...\"
@comment ...\"
@comment TROFF INPUT: ...\"	transcript compatibility for postscript use.
@comment ...\"	transcript compatibility for postscript use.
@comment TROFF INPUT: ...\"
@comment ...\"
@comment TROFF INPUT: ...\"	synopsis:  .P! <file.ps>
@comment ...\"	synopsis:  .P! <file.ps>
@comment TROFF INPUT: ...\"
@comment ...\"
@comment TROFF INPUT: .de P!
@comment .de P!
\.
@comment TROFF INPUT: .fl			\" force out current output buffer
@comment .fl			\" force out current output buffer
\\!%PB
\\!/showpage@{@}def
@comment TROFF INPUT: ...\" the following is from Ken Flowers -- it prevents dictionary overflows
@comment ...\" the following is from Ken Flowers -- it prevents dictionary overflows
\\!/tempdict 200 dict def tempdict begin
@comment TROFF INPUT: .fl			\" prolog
@comment .fl			\" prolog
@comment TROFF INPUT: .sy cat \\$1\" bring in postscript file
@comment .sy cat \\$1\" bring in postscript file
@comment TROFF INPUT: ...\" the following line matches the tempdict above
@comment ...\" the following line matches the tempdict above
\\!end % tempdict %
\\!PE
\\!.
@comment TROFF INPUT: .sp \\$2u	\" move below the image
@comment .sp \\$2u	\" move below the image
@comment TROFF INPUT: ..
@comment ..
@comment TROFF INPUT: .de pF
@comment .de pF
@comment TROFF INPUT: .ie     \\*(f1 .ds f1 \\n(.f
@comment .ie     \\*(f1 .ds f1 \\n(.f
@comment TROFF INPUT: .el .ie \\*(f2 .ds f2 \\n(.f
@comment .el .ie \\*(f2 .ds f2 \\n(.f
@comment TROFF INPUT: .el .ie \\*(f3 .ds f3 \\n(.f
@comment .el .ie \\*(f3 .ds f3 \\n(.f
@comment TROFF INPUT: .el .ie \\*(f4 .ds f4 \\n(.f
@comment .el .ie \\*(f4 .ds f4 \\n(.f
@comment TROFF INPUT: .el .tm ? font overflow
@comment .el .tm ? font overflow
@comment TROFF INPUT: .ft \\$1
@comment .ft \\$1
@comment TROFF INPUT: ..
@comment ..
@comment TROFF INPUT: .de fP
@comment .de fP
@comment TROFF INPUT: .ie     !\\*(f4 \{\
@comment .ie     !\\*(f4 \@{\
@comment TROFF INPUT: .	ft \\*(f4
@comment .	ft \\*(f4
@comment TROFF INPUT: .	ds f4\"
@comment .	ds f4\"
'	br \@}
@comment TROFF INPUT: .el .ie !\\*(f3 \{\
@comment .el .ie !\\*(f3 \@{\
@comment TROFF INPUT: .	ft \\*(f3
@comment .	ft \\*(f3
@comment TROFF INPUT: .	ds f3\"
@comment .	ds f3\"
'	br \@}
@comment TROFF INPUT: .el .ie !\\*(f2 \{\
@comment .el .ie !\\*(f2 \@{\
@comment TROFF INPUT: .	ft \\*(f2
@comment .	ft \\*(f2
@comment TROFF INPUT: .	ds f2\"
@comment .	ds f2\"
'	br \@}
@comment TROFF INPUT: .el .ie !\\*(f1 \{\
@comment .el .ie !\\*(f1 \@{\
@comment TROFF INPUT: .	ft \\*(f1
@comment .	ft \\*(f1
@comment TROFF INPUT: .	ds f1\"
@comment .	ds f1\"
'	br \@}
@comment TROFF INPUT: .el .tm ? font underflow
@comment .el .tm ? font underflow
@comment TROFF INPUT: ..
@comment ..
@comment TROFF INPUT: .ds f1\"

@comment WARNING: man/man8/swlist.8:49:%%unrecognized define-string command: [.ds f1\"]

@comment TROFF INPUT: .ds f2\"

@comment WARNING: man/man8/swlist.8:50:%%unrecognized define-string command: [.ds f2\"]

@comment TROFF INPUT: .ds f3\"

@comment WARNING: man/man8/swlist.8:51:%%unrecognized define-string command: [.ds f3\"]

@comment TROFF INPUT: .ds f4\"

@comment WARNING: man/man8/swlist.8:52:%%unrecognized define-string command: [.ds f4\"]

@comment TROFF INPUT: .ta 8n 16n 24n 32n 40n 48n 56n 64n 72n
@comment .ta 8n 16n 24n 32n 40n 48n 56n 64n 72n
@comment TROFF INPUT: .TH "swlist" "8"

@headings off
@everyheading SWLIST(8) @| @| SWLIST(8)
@everyfooting  @| @thispage @|

@node Top

@chapter swlist" "8


@comment TROFF INPUT: .hy 0
@comment .hy 0
@comment TROFF INPUT: .if n .na
@comment .if n .na
@comment TROFF INPUT: .SH "NAME"
@c DEBUG: print_menu("Top")

@ifnottex
@menu
* NAME::
* SYNOPSIS::
* DESCRIPTION::
* OPTIONS::
* IMPLEMENTATION EXTENSIONS::
* USAGE EXAMPLES::
* EXTENDED OPTIONS::
* RETURN VALUE::
* NOTES::
* REQUISITE UTILITIES::
* FILES::
* APPLICABLE STANDARDS::
* SEE ALSO::
* IDENTIFICATION::
* BUGS::

@end menu
@end ifnottex

@comment MAN2TEXI: EON

@node NAME

@section NAME

swlist @r{---} List information about the software
@comment TROFF INPUT: .SH "SYNOPSIS"
@c DEBUG: print_menu("NAME")
@comment MAN2TEXI: EON

@node SYNOPSIS

@section SYNOPSIS

@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
@b{swlist}  [-d|-r] [-v] [-a @i{attribute}] [-l @i{level}]  [-t @i{targetfile}] \\
[-c @i{file}] [-x @i{option=value}]  [-X @i{options@t{_}file}]  [-W @i{option}] \\
[software@t{_}selections]  [@@targets]
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
@b{swlist} --products [software@t{_}selections]  [@@targets]
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
@b{swlist} --files  [@@targets]
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
@b{swlist} --dir [software@t{_}selections] [@@targets]
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
@b{swlist} --dependencies [--prerequisites @i{sw@t{_}spec}] \\
[--exrequisites @i{sw@t{_}spec}] [@@targets]
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------

@comment TROFF INPUT: .SH "DESCRIPTION"
@c DEBUG: print_menu("SYNOPSIS")
@comment MAN2TEXI: EON

@node DESCRIPTION

@section DESCRIPTION

@comment TROFF INPUT: .PP

@b{swlist} lists information about a distribution or installed software.
Neither swlist nor any component of swbis is required
on the target host, however, the target host must look like a Unix system at
the shell and command-line utility level.  Remote network connections are made
by ssh.  Ssh is the default but rsh can be selected by a command line
option.
@comment TROFF INPUT: .PP

@b{swlist} operates on serial archives (e.g. compressed tar archives) or on a file system
directory representing installed software.  The default target directory is '/', this
default is subject to user configuration.
@comment TROFF INPUT: .SH "OPTIONS"
@c DEBUG: print_menu("DESCRIPTION")
@comment MAN2TEXI: EON

@node OPTIONS

@section OPTIONS

@comment TROFF INPUT: .PP

@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation

@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------

@comment TROFF INPUT: .PP

@b{-a attribute}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation

Specify an attribute to list.   Only the @b{architecture} attribute is
supported for installed@t{_}software at this time (MAR 2007).  The returned value is determined by running
GNU @b{config.guess} on the target host.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------

@comment TROFF INPUT: .PP

@b{-c FILE}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation

Write the catalog to FILE. Software selections are applied.
The only supported FILE is '-' causing a dump of the catalog
to stdout in tar format.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------

@comment TROFF INPUT: .PP

@b{-d}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation

Specify the target is a distribution.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------

@comment TROFF INPUT: .PP

@b{-f FILE}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation

Read the list of software selections from FILE.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------

@comment TROFF INPUT: .PP

@b{-l LEVEL}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation

Specify a level to list. LEVEL is an enumerated list of objects: bundle, product, fileset, control@t{_}file, file
(Not yet implemented)
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------

@comment TROFF INPUT: .PP

@b{-r}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation

Indicates that the operation is on installed software at a location indicated by the the target.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------

@comment TROFF INPUT: .PP

@b{-t targetfile}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation

Specify a file containing a list of targets (one per line).
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------

@comment TROFF INPUT: .PP

@b{-v}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation

List attribute value pairs in INDEX file format according to
attibutes specified by the -a option, list all attributes if
-a not used; or, increment the verbose level.
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
@b{Note:  This option is overloaded. It means two different things depending
on the context.  If a mode is explicitly given, then it means
increment verbosity, otherwise it means list in INDEX file format.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------

@comment TROFF INPUT: .PP


@comment WARNING: man/man8/swlist.8:173:%%new font B started without closing previous font B

}@b{-x option=value}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation

Specify the extended option overriding the defaults file value.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-X FILE}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation

Specify the extended options filename, FILE,  overriding the default filenames.
This option may be given more then once. If the resulting specified value is an empty string
then reading of any options file is disabled.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{@minus{}@minus{}help}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation

Show help (Implementation extension)
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W option[,option,...]}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation

Specify the implementation extension option.
@comment TROFF INPUT: .br
@comment .br
Syntax: -W option[=option@t{_}argument[,option...]
@comment TROFF INPUT: .br
@comment .br
Options may be separated by a comma.  The implementation extension
options may also be given individually using the '@minus{}@minus{}long-option[=option@t{_}arg]' syntax.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{--products}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation

List the product's tag, revision, vendor@t{_}tag and location.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{--directory}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation

List the catalog directory entries.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{--files}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation

List files as defined in the installed catalog
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{--sys}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation

List files as exists in the file system
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{--dependencies}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation

Run in check dependency mode.
Assert dependencies against installed software catalog. Dependencies are
software specs given by the --prerequisites and --extrequisites options
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------

@comment TROFF INPUT: .PP

@b{--prerequisites=SW@t{_}SPEC}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation

Specify depencency to check, may be used multiple times.
Prerequisites packages are required to be installed.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------

@comment TROFF INPUT: .PP

@b{--exrequisites=SW@t{_}SPEC}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation

Specify depencency to check, may be used multiple times.
Exrequisites packages are required not to be installed.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------

@comment TROFF INPUT: .PP

@b{-W remote-shell=SHELL}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation

Defaults File Option: @b{swbis@t{_}remote@t{_}shell@t{_}client}
@comment TROFF INPUT: .br
@comment .br
Supported shells are "ssh" and "rsh", ssh is the default.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W show-options-files}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Show the complete list of options files and if they are found.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W show-options}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Show the options after reading the files and parsing the command line options.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W pax-command=@{tar|pax|star|gtar@}}
@comment TROFF INPUT: .br
@comment .br
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Set the portable archive command for all operations.
The default is "pax".
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W pax-read-command=@{tar|pax|star|gtar@}}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Set the read command for local and remote hosts.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W remote-pax-read-command=@{tar|pax|star|gtar@}}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Defaults File Option: @b{swbis@t{_}remote@t{_}pax@t{_}read@t{_}command}
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Set the read command for remote hosts.
This is the command that runs on the target (e.g. pax -r, tar xpf -).
The default is "pax".
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W local-pax-read-command=@{tar|pax|star|gtar@}}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Defaults File Option: @b{swbis@t{_}local@t{_}pax@t{_}read@t{_}command}
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Set the read command for local hosts.
This is the command that runs on the target (e.g. pax -r, tar xpf -).
The default is "pax".
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W pax-write-command=@{tar|pax|star|gtar|swbistar@}}
@comment TROFF INPUT: .br
@comment .br
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Set the write command for local and remote hosts.
This is the command that runs on the target (e.g. pax -w, tar cf -).
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W remote-pax-write-command=@{tar|pax|star|gtar|swbistar@}}
@comment TROFF INPUT: .br
@comment .br
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Defaults File Option: @b{swbis@t{_}remote@t{_}pax@t{_}write@t{_}command}
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Set the write command for remote hosts.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W local-pax-write-command=@{tar|pax|star|gtar|swbistar@}}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Defaults File Option: @b{swbis@t{_}local@t{_}pax@t{_}write@t{_}command}
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Set the portable archive write command for local host operations.
This is the command that runs on the source (e.g. pax -w, tar cf -).
The default is "pax".
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W remote-pax-write-command=@{tar|pax|star|gtar|swbistar@}}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Defaults File Option: @b{swbis@t{_}remote@t{_}pax@t{_}write@t{_}command}
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Set the portable archive write command for remote host operations.
This is the command that runs on the source (e.g. pax -w, tar cf -).
The default is "pax".
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W no-defaults}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Do not read any defaults files.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W no-getconf}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Defaults File Option: @b{swbis@t{_}no@t{_}getconf}
@comment TROFF INPUT: .br
@comment .br
Makes the remote command be '/bin/sh -s' instead of the default
'PATH=`getconf PATH` sh -s'.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W shell-command=NAME}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Defaults File Option: @b{swbis@t{_}shell@t{_}command}
@comment TROFF INPUT: .br
@comment .br
NAME may be one of "detect" "bash", "sh" or "posix" and specifies the
remote command run by the remote shell.
"posix" is 'PATH=`getconf PATH` sh -s', "bash" is "/bin/bash -s",
"sh" is "/bin/sh -s", and "ksh" is "ksh -s".
The default is "posix".
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W use-getconf}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Opposite of @minus{}@minus{}no-getconf.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------

@comment TROFF INPUT: .PP

@b{-W source-script-name=NAME}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Write the script that is written into the remote shell's stdin to NAME.
This is useful for debugging.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{-W target-script-name=NAME}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
Write the script that is written into the remote shell's stdin to NAME.
This is useful for debugging.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@b{software@t{_}selections}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation

Refer to the software objects (products, filesets)
using software spec syntax. (See sw(5) for syntax).
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------

@comment TROFF INPUT: .PP

@b{target}
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation

Refers to the software@t{_}collection where the software
selections are to be applied.
Allows specification of host and pathname where the software collection is located.
A target that contains only one part is assumed to be a hostname.
To force interpretation as a path, use a absolute path or prefix with ':'.
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------

@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
Source and Target Specification and Logic

     Synopsis:
          Posix:
               host[:path]
               host
               host:
               /path  # Absolute path

          Swbis Extension:
               [user@@]host[:path]
               [user@@]host@t{_}port[:path]
               :path

          Swbis Multi-hop Target Extension:
               # ':' is the target delimiter
	       # '@t{_}' delimits a port number in the host field

               [user@@]host[@@@@[user@@]host[@@@@...]][:file]
               [user@@]host@t{_}port[@@@@[user@@]host[@@@@...]][:file]

               # Using ':', a trailing colon is used to
               # disambiguate between a host and file.
	       # For Example,
               :file
               host:
               host
               host:file
               host:host:
               host@t{_}port:host@t{_}port:
               host:host:file
               user@@host:user@@host:
               user@@host:user@@host:host:
               user@@host:user@@host:file

     A more formal description:

     target : HOST@t{_}CHARACTER@t{_}STRING ':' PATHNAME@t{_}CHARACTER@t{_}STRING
            | HOST@t{_}CHARACTER@t{_}STRING ':'
            | HOST@t{_}CHARACTER@t{_}STRING
            | PATHNAME@t{_}CHARACTER@t{_}STRING
            | ':' PATHNAME@t{_}CHARACTER@t{_}STRING   # Impl extension
            ;

       PATHNAME@t{_}CHARACTER@t{_}STRING must be an absolute path unless
                       a HOST@t{_}CHARACTER@t{_}STRING is given.  Allowing
                       a relative path is a feature of the swbis
                       implementation.

                NOTE: A '.' as a target is an implementation
                      extension and means extract in current
                      directory.

                NOTE: A '-' indicating stdout/stdin is an
                      implementation extension.

                NOTE: A ':' in the first character indicates a filename.
                      This is an implementation extension.

       HOST@t{_}CHARACTER@t{_}STRING is an IP or hostname.

    Examples:
       Copy the  distribution /var/tmp/foo.tar.gz at 192.168.1.10
              swcopy -s /var/tmp/foo.tar.gz @@192.168.1.10:/root


Implementation Extension Syntax (multi ssh-hop) :
    Syntax:
    %start   wtarget    # the Implementation Extension Target
                        # Note: a trailing ':' forces interpretation
                        # as a host, not a file.
    wtarget   : wtarget DELIM sshtarget
              | sshtarget
              | sshtarget DELIM
              ;
    sshtarget : user '@@' target # Note: only the last target
              | target          # may have a PATHNAME, and only a host
              ;                 * may have a user
    target   : HOST@t{_}CHARACTER@t{_}STRING
             | PATHNAME@t{_}CHARACTER@t{_}STRING
             ;
    user     : PORTABLE@t{_}CHARACTER@t{_}STRING  # The user name

    DELIM    : ':'   # The multi-hop delimiter.
             ;  @r{
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP



@comment TROFF INPUT: .SH "IMPLEMENTATION EXTENSIONS"
@c DEBUG: print_menu("OPTIONS")
@comment MAN2TEXI: EON

@node IMPLEMENTATION EXTENSIONS

@section IMPLEMENTATION EXTENSIONS

@comment TROFF INPUT: .PP

The

@comment WARNING: man/man8/swlist.8:493:%%new font B started without closing previous font R

}@b{--dependencies},
@b{--products}, and
@b{--files} are implementation extension modes.

@comment TROFF INPUT: .SH "USAGE EXAMPLES"
@c DEBUG: print_menu("IMPLEMENTATION EXTENSIONS")
@comment MAN2TEXI: EON

@node USAGE EXAMPLES

@section USAGE EXAMPLES

@comment TROFF INPUT: .SS "Show the path of the installed software catalog\&."
@c DEBUG: print_menu("USAGE EXAMPLES")

@ifnottex
@menu
* Show the path of the installed software catalog ::
* List Product from a certain distributor::
* List all products::
* List products installed at alternate root /mnt/test::
* List the files of package foo as they exist in the file system::
* List products according to a name pattern and revision and distributor::
* Test Dependencies::

@end menu
@end ifnottex

@comment MAN2TEXI: EON

@node Show the path of the installed software catalog

@subsection Show the path of the installed software catalog.

@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
  swlist --show-options | grep installed@t{_}@r{
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .SS "List Product from a certain distributor"
@comment MAN2TEXI: EON

@node List Product from a certain distributor

@subsection List Product from a certain distributor

@comment TROFF INPUT: .PP

 List products from a certain distributor, foo (Note:  this requires that

@comment WARNING: man/man8/swlist.8:507:%%new font I started without closing previous font R

the }@i{foo} vendor uses foo@t{_}something@t{_} as the product vendor@t{_}tag
in their distributions.
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
  swlist v="foo*"@r{
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .SS "List all products"
@comment MAN2TEXI: EON

@node List all products

@subsection List all products

@comment TROFF INPUT: .PP

@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
  swlist @@/   # If distribution@t{_}target@t{_}directory=/ then "swlist" alone

@comment WARNING: man/man8/swlist.8:519:%%new font R started without closing previous font R

              # will suffice.}
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .SS "List products installed at alternate root  /mnt/test"
@comment MAN2TEXI: EON

@node List products installed at alternate root /mnt/test

@subsection List products installed at alternate root  /mnt/test

@comment TROFF INPUT: .PP

@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
  swlist @@/mnt/test @r{
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .SS "List the files of package foo as they exist in the file system"
@comment MAN2TEXI: EON

@node List the files of package foo as they exist in the file system

@subsection List the files of package foo as they exist in the file system

@comment TROFF INPUT: .PP

@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display

@comment WARNING: man/man8/swlist.8:533:%%new font R started without closing previous font R

swlist -vv --files --sys foo @@ root@@localhost}
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .SS "List products according to a name pattern and revision, and distributor"
@comment MAN2TEXI: EON

@node List products according to a name pattern and revision and distributor

@subsection List products according to a name pattern and revision, and distributor

@comment TROFF INPUT: .PP

@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
  swlist emacs"*","r>20",v=rh"*" @@/@r{
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .SS "Test Dependencies"
@comment MAN2TEXI: EON

@node Test Dependencies

@subsection Test Dependencies

@comment TROFF INPUT: .PP

Check if a given dependency passes against a given
installed catalog on a host
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display

@comment WARNING: man/man8/swlist.8:550:%%new font R started without closing previous font R

  swlist -x verbose=3 --depend --pre="foo*,r>=1.0,r<2" @@192.168.3.1:/; echo $?}
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .SH "EXTENDED OPTIONS"
@comment MAN2TEXI: EON

@node EXTENDED OPTIONS

@section EXTENDED OPTIONS

@comment TROFF INPUT: .PP

Extended options can be specified on the command line using the -x option
or from the defaults file, swdefaults.  Shown below is an actual portion of
a defaults file which show default values.
@comment TROFF INPUT: .SS "POSIX"
@c DEBUG: print_menu("EXTENDED OPTIONS")

@ifnottex
@menu
* POSIX::
* Swbis Implementation::

@end menu
@end ifnottex

@comment MAN2TEXI: EON

@node POSIX

@subsection POSIX

@comment TROFF INPUT: .PP

These options are set in the /usr/lib/swbis/swdefaults or the ~/.swdefaults on
the local (management host, host where swlist invoked).
These files on the target host are not used.
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
   distribution@t{_}target@t{_}directory  = /
   installed@t{_}software@t{_}catalog  = var/lib/swbis/catalog/
   one@t{_}liner                   = files|products   # Mode when -v not given
   select@t{_}local                = false      # Not Implemented
   verbose                     = 1@r{
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .SS "Swbis Implementation"
@comment MAN2TEXI: EON

@node Swbis Implementation

@subsection Swbis Implementation

@comment TROFF INPUT: .PP

These options are set in the /usr/lib/swbis/swbisdefaults or the ~/.swbis/swbisdefaults
file.
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
  swlist.swbis@t{_}no@t{_}getconf = true # true or false
  swlist.swbis@t{_}shell@t{_}command = detect # @{detect|sh|bash|posix|ksh@}
  swlist.swbis@t{_}no@t{_}remote@t{_}kill = false # true or false
  swlist.swbis@t{_}local@t{_}pax@t{_}write@t{_}command=detect #@{pax|tar|gtar|detect@}
  swlist.swbis@t{_}remote@t{_}pax@t{_}write@t{_}command=detect #@{pax|tar|gtar|detect@}
  swlist.swbis@t{_}local@t{_}pax@t{_}read@t{_}command=tar #@{pax|tar|gtar|star@}
  swlist.swbis@t{_}remote@t{_}pax@t{_}read@t{_}command=tar #@{pax|tar|gtar|star@}
  swlist.swbis@t{_}remote@t{_}shell@t{_}client=ssh

@comment WARNING: man/man8/swlist.8:588:%%new font R started without closing previous font R

  swlist.swbis@t{_}forward@t{_}agent=True}
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .SH "RETURN VALUE"
@comment MAN2TEXI: EON

@node RETURN VALUE

@section RETURN VALUE

@comment TROFF INPUT: .PP

0 if all targets succeeded, 1 if all targets failed or internal error, 2 if some targets failed
and some succeeded.
When checking dependencies, 3 if the given sw@t{_}specs failed as dependencies, 0 if succeeded.
@comment TROFF INPUT: .SH "NOTES"
@c DEBUG: print_menu("RETURN VALUE")
@comment MAN2TEXI: EON

@node NOTES

@section NOTES

 Multiple ssh-hops is an implementation extension.
@comment TROFF INPUT: .br
@comment .br
@comment TROFF INPUT: .SH "REQUISITE UTILITIES"
@c DEBUG: print_menu("NOTES")
@comment MAN2TEXI: EON

@node REQUISITE UTILITIES

@section REQUISITE UTILITIES

@comment TROFF INPUT: .PP

The swbis distributed utilities require
@b{bash}, public domain @b{ksh}, or
Sun's /usr/xpg4/bin/sh to be present on the target host.  If the
@b{swbis@t{_}shell@t{_}command} extended option is set to 'detect'
you don't have to know which one is present, otherwise you may specify one explicitly.
@comment TROFF INPUT: .PP

A POSIX @b{awk} is required, and with the ability to
specify several thousand bytes of program text as a command argument.
GNU awk  works, as does the ATT Awk book awk, and the awk on BSD systems.
See the INSTALL file for further details regarding a small issue with the
OpenSolaris (c.2006) awk.
@comment TROFF INPUT: .PP

Tar or pax is used for internally for data transfer.  You may specify which one.
@b{swlist} and @b{swverify} require
either GNU tar or pax be present on a host.  You may set auto detection
for this requirement
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
swlist.swbis@t{_}local@t{_}pax@t{_}write@t{_}command=detect #@{pax|tar|gtar|detect@}
swlist.swbis@t{_}remote@t{_}pax@t{_}write@t{_}command=detect #@{pax|tar|gtar|detect@}@r{
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP


@comment TROFF INPUT: .PP

GNU Privacy Guard, gpg is required for verification of package signatures.
@comment TROFF INPUT: .SH "FILES"
@c DEBUG: print_menu("REQUISITE UTILITIES")
@comment MAN2TEXI: EON

@node FILES

@section FILES

@comment TROFF INPUT: .PP

@comment TROFF INPUT: .PP

@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
/var/lib/swbis/catalog # Location of installed catalog
/usr/lib/swbis/swdefaults
/usr/lib/swbis/swbisdefaults
$HOME/.swbis/swdefaults

@comment WARNING: man/man8/swlist.8:634:%%new font R started without closing previous font R

$HOME/.swbis/swbisdefaults}
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .PP


@comment TROFF INPUT: .SH "APPLICABLE STANDARDS"
@c DEBUG: print_menu("FILES")
@comment MAN2TEXI: EON

@node APPLICABLE STANDARDS

@section APPLICABLE STANDARDS

@comment TROFF INPUT: .PP

ISO/IEC 15068-2:1999, Open Group CAE C701
@comment TROFF INPUT: .SH "SEE ALSO"
@c DEBUG: print_menu("APPLICABLE STANDARDS")
@comment MAN2TEXI: EON

@node SEE ALSO

@section SEE ALSO

@comment TROFF INPUT: .PP

info swbis
@comment TROFF INPUT: .PP

swbis(7), sw(5), swbisparse(1), swign(1), swverify(8)
@comment TROFF INPUT: .SH "IDENTIFICATION"
@c DEBUG: print_menu("SEE ALSO")
@comment MAN2TEXI: EON

@node IDENTIFICATION

@section IDENTIFICATION

 swlist(8): The query/listing utility of the swbis project.
 Author: Jim Lowe   Email: jhlowe at acm.org
 Version: 1.13.1
 Last Updated: 2006-07
 Copying: GNU Free Documentation License
@comment TROFF INPUT: .SH "BUGS"
@c DEBUG: print_menu("IDENTIFICATION")
@comment MAN2TEXI: EON

@node BUGS

@section BUGS

@comment TROFF INPUT: .PP

swlist is subject to breakage if a user's account on an intermediate
(or terminal) host in a target spec is not configured to use a Bourne
compatible shell. (This breakage may be eliminated by use of the
--no-getconf option as explained above.)
@comment TROFF INPUT: .PP

swlist does not currently implement the -v,-a options.  Listing products
in a distribution is not supported.  Operating on a distribution in
directory form is not supported.  The catalog query funtions are
implemented in awk and subject to its bugs.
@comment  created by instant / docbook-to-man, Fri 02 Nov 2018, 20:39
@bye
