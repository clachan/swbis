...\" $Header: /usr/src/docbook-to-man/cmd/RCS/docbook-to-man.sh,v 1.3 1996/06/17 03:36:49 fld Exp $
...\"
...\"	transcript compatibility for postscript use.
...\"
...\"	synopsis:  .P! <file.ps>
...\"
.de P!
\\&.
.fl			\" force out current output buffer
\\!%PB
\\!/showpage{}def
...\" the following is from Ken Flowers -- it prevents dictionary overflows
\\!/tempdict 200 dict def tempdict begin
.fl			\" prolog
.sy cat \\$1\" bring in postscript file
...\" the following line matches the tempdict above
\\!end % tempdict %
\\!PE
\\!.
.sp \\$2u	\" move below the image
..
.de pF
.ie     \\*(f1 .ds f1 \\n(.f
.el .ie \\*(f2 .ds f2 \\n(.f
.el .ie \\*(f3 .ds f3 \\n(.f
.el .ie \\*(f4 .ds f4 \\n(.f
.el .tm ? font overflow
.ft \\$1
..
.de fP
.ie     !\\*(f4 \{\
.	ft \\*(f4
.	ds f4\"
'	br \}
.el .ie !\\*(f3 \{\
.	ft \\*(f3
.	ds f3\"
'	br \}
.el .ie !\\*(f2 \{\
.	ft \\*(f2
.	ds f2\"
'	br \}
.el .ie !\\*(f1 \{\
.	ft \\*(f1
.	ds f1\"
'	br \}
.el .tm ? font underflow
..
.ds f1\"
.ds f2\"
.ds f3\"
.ds f4\"
.ta 8n 16n 24n 32n 40n 48n 56n 64n 72n 
.TH "swlist" "8"
 
.hy 0 
.if n .na 
.SH "NAME"
swlist \(em List information about the software
.SH "SYNOPSIS"
.PP
.nf
\fBswlist\fP  [-d|-r] [-v] [-a \fIattribute\fP] [-l \fIlevel\fP]  [-t \fItargetfile\fP] \\
[-c \fIfile\fP] [-x \fIoption=value\fP]  [-X \fIoptions_file\fP]  [-W \fIoption\fP] \\
[software_selections]  [@targets] 
.fi
.PP
.nf
\fBswlist\fP --products [software_selections]  [@targets]
.fi
.PP
.nf
\fBswlist\fP --files  [@targets]
.fi
.PP
.nf
\fBswlist\fP --dir [software_selections] [@targets]
.fi
.PP
.nf
\fBswlist\fP --dependencies [--prerequisites \fIsw_spec\fP] \\
[--exrequisites \fIsw_spec\fP] [@targets]
.fi
 
.SH "DESCRIPTION"
.PP
\fBswlist\fP lists information about a distribution or installed software\&.
Neither swlist nor any component of swbis is required
on the target host, however, the target host must look like a Unix system at
the shell and command-line utility level\&.  Remote network connections are made
by ssh\&.  Ssh is the default but rsh can be selected by a command line
option\&.
.PP
\fBswlist\fP operates on serial archives (e\&.g\&. compressed tar archives) or on a file system
directory representing installed software\&.  The default target directory is \&'/\&', this
default is subject to user configuration\&.
.SH "OPTIONS"
.PP
.RS
 
.RE
 
.PP
\fB-a attribute\fP 
.RS
 
Specify an attribute to list\&.   Only the \fBarchitecture\fP attribute is
supported for installed_software at this time (MAR 2007)\&.  The returned value is determined by running
GNU \fBconfig\&.guess\fP on the target host\&.
.RE
 
.PP
\fB-c FILE\fP 
.RS
 
Write the catalog to FILE\&. Software selections are applied\&.
The only supported FILE is \&'-\&' causing a dump of the catalog
to stdout in tar format\&.
.RE
 
.PP
\fB-d\fP 
.RS
 
Specify the target is a distribution\&.
.RE
 
.PP
\fB-f FILE\fP 
.RS
 
Read the list of software selections from FILE\&.
.RE
 
.PP
\fB-l LEVEL\fP 
.RS
 
Specify a level to list\&. LEVEL is an enumerated list of objects: bundle, product, fileset, control_file, file
(Not yet implemented)
.RE
 
.PP
\fB-r\fP 
.RS
 
Indicates that the operation is on installed software at a location indicated by the the target\&. 
.RE
 
.PP
\fB-t targetfile\fP 
.RS
 
Specify a file containing a list of targets (one per line)\&.
.RE
 
.PP
\fB-v\fP 
.RS
 
List attribute value pairs in INDEX file format according to
attibutes specified by the -a option, list all attributes if
-a not used; or, increment the verbose level\&.
.PP
.RS
\fBNote:  This option is overloaded\&. It means two different things depending
on the context\&.  If a mode is explicitly given, then it means
increment verbosity, otherwise it means list in INDEX file format\&.
.RE
.RE
 
.PP
\fB-x option=value\fP 
.RS
 
Specify the extended option overriding the defaults file value\&.
.RE
.PP
\fB-X FILE\fP 
.RS
 
Specify the extended options filename, FILE,  overriding the default filenames\&.
This option may be given more then once\&. If the resulting specified value is an empty string
then reading of any options file is disabled\&.
.RE
.PP
\fB\-\-help\fP 
.RS
 
Show help (Implementation extension)
.RE
.PP
\fB-W option[,option,\&.\&.\&.]\fP 
.RS
 
Specify the implementation extension option\&.
.br
Syntax: -W option[=option_argument[,option\&.\&.\&.]
.br
Options may be separated by a comma\&.  The implementation extension
options may also be given individually using the \&'\-\-long-option[=option_arg]\&' syntax\&.
.RE
.PP
\fB--products\fP 
.RS
 
List the product\&'s tag, revision, vendor_tag and location\&.
.RE
.PP
\fB--directory\fP 
.RS
 
List the catalog directory entries\&.
.RE
.PP
\fB--files\fP 
.RS
 
List files as defined in the installed catalog
.RE
.PP
\fB--sys\fP 
.RS
 
List files as exists in the file system
.RE
.PP
\fB--dependencies\fP 
.RS
 
Run in check dependency mode\&.
Assert dependencies against installed software catalog\&. Dependencies are
software specs given by the --prerequisites and --extrequisites options
.RE
 
.PP
\fB--prerequisites=SW_SPEC\fP 
.RS
 
Specify depencency to check, may be used multiple times\&.
Prerequisites packages are required to be installed\&.
.RE
 
.PP
\fB--exrequisites=SW_SPEC\fP 
.RS
 
Specify depencency to check, may be used multiple times\&.
Exrequisites packages are required not to be installed\&.
.RE
 
.PP
\fB-W remote-shell=SHELL\fP 
.RS
 
Defaults File Option: \fBswbis_remote_shell_client\fP
.br
Supported shells are "ssh" and "rsh", ssh is the default\&.
.RE
.PP
\fB-W show-options-files\fP 
.RS
Show the complete list of options files and if they are found\&.
.RE
.PP
\fB-W show-options\fP 
.RS
Show the options after reading the files and parsing the command line options\&.
.RE
.PP
\fB-W pax-command={tar|pax|star|gtar}\fP
.br
.RS
Set the portable archive command for all operations\&.
The default is "pax"\&.
.RE
.PP
\fB-W pax-read-command={tar|pax|star|gtar}\fP
.RS
Set the read command for local and remote hosts\&.
.RE
.PP
\fB-W remote-pax-read-command={tar|pax|star|gtar}\fP
.RS
Defaults File Option: \fBswbis_remote_pax_read_command\fP
.RE
.RS
Set the read command for remote hosts\&.
This is the command that runs on the target (e\&.g\&. pax -r, tar xpf -)\&.
The default is "pax"\&.
.RE
.PP
\fB-W local-pax-read-command={tar|pax|star|gtar}\fP
.RS
Defaults File Option: \fBswbis_local_pax_read_command\fP
.RE
.RS
Set the read command for local hosts\&.
This is the command that runs on the target (e\&.g\&. pax -r, tar xpf -)\&.
The default is "pax"\&.
.RE
.PP
\fB-W pax-write-command={tar|pax|star|gtar|swbistar}\fP
.br
.RS
Set the write command for local and remote hosts\&.
This is the command that runs on the target (e\&.g\&. pax -w, tar cf -)\&.
.RE
.PP
\fB-W remote-pax-write-command={tar|pax|star|gtar|swbistar}\fP
.br
.RS
Defaults File Option: \fBswbis_remote_pax_write_command\fP
.RE
.RS
Set the write command for remote hosts\&.
.RE
.PP
\fB-W local-pax-write-command={tar|pax|star|gtar|swbistar}\fP
.RS
Defaults File Option: \fBswbis_local_pax_write_command\fP
.RE
.RS
Set the portable archive write command for local host operations\&.
This is the command that runs on the source (e\&.g\&. pax -w, tar cf -)\&.
The default is "pax"\&.
.RE
.PP
\fB-W remote-pax-write-command={tar|pax|star|gtar|swbistar}\fP
.RS
Defaults File Option: \fBswbis_remote_pax_write_command\fP
.RE
.RS
Set the portable archive write command for remote host operations\&.
This is the command that runs on the source (e\&.g\&. pax -w, tar cf -)\&.
The default is "pax"\&.
.RE
.PP
\fB-W no-defaults\fP 
.RS
Do not read any defaults files\&.
.RE
.PP
\fB-W no-getconf\fP 
.RS
Defaults File Option: \fBswbis_no_getconf\fP
.br
Makes the remote command be \&'/bin/sh -s\&' instead of the default
\&'PATH=`getconf PATH` sh -s\&'\&. 
.RE
.PP
\fB-W shell-command=NAME\fP 
.RS
Defaults File Option: \fBswbis_shell_command\fP
.br
NAME may be one of "detect" "bash", "sh" or "posix" and specifies the
remote command run by the remote shell\&.
"posix" is \&'PATH=`getconf PATH` sh -s\&', "bash" is "/bin/bash -s",
"sh" is "/bin/sh -s", and "ksh" is "ksh -s"\&.
The default is "posix"\&.
.RE
.PP
\fB-W use-getconf\fP 
.RS
Opposite of \-\-no-getconf\&.
.RE
 
.PP
\fB-W source-script-name=NAME\fP 
.RS
Write the script that is written into the remote shell\&'s stdin to NAME\&.
This is useful for debugging\&.
.RE
.PP
\fB-W target-script-name=NAME\fP 
.RS
Write the script that is written into the remote shell\&'s stdin to NAME\&.
This is useful for debugging\&.
.RE
.PP
\fBsoftware_selections\fP
.RS
 
Refer to the software objects (products, filesets)
using software spec syntax\&. (See sw(5) for syntax)\&.
.RE
 
.PP
\fBtarget\fP
.RS
 
Refers to the software_collection where the software
selections are to be applied\&.
Allows specification of host and pathname where the software collection is located\&.
A target that contains only one part is assumed to be a hostname\&.
To force interpretation as a path, use a absolute path or prefix with \&':\&'\&.
.RE
 
.PP
.nf
\f(CWSource and Target Specification and Logic
     
     Synopsis:
          Posix:
               host[:path]
               host
               host:
               /path  # Absolute path

          Swbis Extension:
               [user@]host[:path]
               [user@]host_port[:path]
               :path

          Swbis Multi-hop Target Extension:
               # \&':\&' is the target delimiter
	       # \&'_\&' delimits a port number in the host field

               [user@]host[@@[user@]host[@@\&.\&.\&.]][:file] 
               [user@]host_port[@@[user@]host[@@\&.\&.\&.]][:file] 
              
               # Using \&':\&', a trailing colon is used to
               # disambiguate between a host and file\&.
	       # For Example,
               :file
               host:
               host
               host:file
               host:host:
               host_port:host_port:
               host:host:file
               user@host:user@host:
               user@host:user@host:host:
               user@host:user@host:file
 
     A more formal description:

     target : HOST_CHARACTER_STRING \&':\&' PATHNAME_CHARACTER_STRING
            | HOST_CHARACTER_STRING \&':\&'
            | HOST_CHARACTER_STRING 
            | PATHNAME_CHARACTER_STRING 
            | \&':\&' PATHNAME_CHARACTER_STRING   # Impl extension
            ; 

       PATHNAME_CHARACTER_STRING must be an absolute path unless
                       a HOST_CHARACTER_STRING is given\&.  Allowing
                       a relative path is a feature of the swbis
                       implementation\&.

                NOTE: A \&'\&.\&' as a target is an implementation
                      extension and means extract in current
                      directory\&.
 
                NOTE: A \&'-\&' indicating stdout/stdin is an 
                      implementation extension\&.

                NOTE: A \&':\&' in the first character indicates a filename\&.
                      This is an implementation extension\&.

       HOST_CHARACTER_STRING is an IP or hostname\&.

    Examples:
       Copy the  distribution /var/tmp/foo\&.tar\&.gz at 192\&.168\&.1\&.10
              swcopy -s /var/tmp/foo\&.tar\&.gz @192\&.168\&.1\&.10:/root


Implementation Extension Syntax (multi ssh-hop) :
    Syntax:
    %start   wtarget    # the Implementation Extension Target
                        # Note: a trailing \&':\&' forces interpretation
                        # as a host, not a file\&.
    wtarget   : wtarget DELIM sshtarget
              | sshtarget
              | sshtarget DELIM
              ; 
    sshtarget : user \&'@\&' target # Note: only the last target
              | target          # may have a PATHNAME, and only a host
              ;                 * may have a user
    target   : HOST_CHARACTER_STRING
             | PATHNAME_CHARACTER_STRING
             ;
    user     : PORTABLE_CHARACTER_STRING  # The user name

    DELIM    : \&':\&'   # The multi-hop delimiter\&.
             ;  \fR
.fi
.PP
 
 
.SH "IMPLEMENTATION EXTENSIONS"
.PP
The
\fB--dependencies\fP,
\fB--products\fP, and
\fB--files\fP are implementation extension modes\&.
 
.SH "USAGE EXAMPLES"
.SS "Show the path of the installed software catalog\&."
.PP
.nf
\f(CW  swlist --show-options | grep installed_\fR
.fi
.PP
.SS "List Product from a certain distributor"
.PP
 List products from a certain distributor, foo (Note:  this requires that
the \fIfoo\fP vendor uses foo_something_ as the product vendor_tag
in their distributions\&.
.PP
.nf
\f(CW  swlist v="foo*"\fR
.fi
.PP
.SS "List all products"
.PP
.PP
.nf
\f(CW  swlist @/   # If distribution_target_directory=/ then "swlist" alone
              # will suffice\&.\fR
.fi
.PP
.SS "List products installed at alternate root  /mnt/test"
.PP
.PP
.nf
\f(CW  swlist @/mnt/test \fR
.fi
.PP
.SS "List the files of package foo as they exist in the file system"
.PP
.PP
.nf
\f(CWswlist -vv --files --sys foo @ root@localhost\fR
.fi
.PP
.SS "List products according to a name pattern and revision, and distributor"
.PP
.PP
.nf
\f(CW  swlist emacs"*","r>20",v=rh"*" @/\fR
.fi
.PP
.SS "Test Dependencies"
.PP
Check if a given dependency passes against a given
installed catalog on a host
.PP
.PP
.nf
\f(CW  swlist -x verbose=3 --depend --pre="foo*,r>=1\&.0,r<2" @192\&.168\&.3\&.1:/; echo $?\fR
.fi
.PP
.SH "EXTENDED OPTIONS"
.PP
Extended options can be specified on the command line using the -x option
or from the defaults file, swdefaults\&.  Shown below is an actual portion of
a defaults file which show default values\&.
.SS "POSIX"
.PP
These options are set in the /usr/lib/swbis/swdefaults or the ~/\&.swdefaults on
the local (management host, host where swlist invoked)\&.
These files on the target host are not used\&.
.PP
.PP
.nf
\f(CW   distribution_target_directory  = /
   installed_software_catalog  = var/lib/swbis/catalog/
   one_liner                   = files|products   # Mode when -v not given
   select_local                = false      # Not Implemented
   verbose                     = 1\fR
.fi
.PP
.SS "Swbis Implementation"
.PP
These options are set in the /usr/lib/swbis/swbisdefaults or the ~/\&.swbis/swbisdefaults
file\&. 
.PP
.PP
.nf
\f(CW  swlist\&.swbis_no_getconf = true # true or false
  swlist\&.swbis_shell_command = detect # {detect|sh|bash|posix|ksh}
  swlist\&.swbis_no_remote_kill = false # true or false
  swlist\&.swbis_local_pax_write_command=detect #{pax|tar|gtar|detect}
  swlist\&.swbis_remote_pax_write_command=detect #{pax|tar|gtar|detect}
  swlist\&.swbis_local_pax_read_command=tar #{pax|tar|gtar|star}
  swlist\&.swbis_remote_pax_read_command=tar #{pax|tar|gtar|star}
  swlist\&.swbis_remote_shell_client=ssh
  swlist\&.swbis_forward_agent=True\fR
.fi
.PP
.SH "RETURN VALUE"
.PP
0 if all targets succeeded, 1 if all targets failed or internal error, 2 if some targets failed
and some succeeded\&.
When checking dependencies, 3 if the given sw_specs failed as dependencies, 0 if succeeded\&.
.SH "NOTES"
 Multiple ssh-hops is an implementation extension\&.
.br
.SH "REQUISITE UTILITIES"
.PP
The swbis distributed utilities require
\fBbash\fP, public domain \fBksh\fP, or 
Sun\&'s /usr/xpg4/bin/sh to be present on the target host\&.  If the
\fBswbis_shell_command\fP extended option is set to \&'detect\&'
you don\&'t have to know which one is present, otherwise you may specify one explicitly\&.
.PP
A POSIX \fBawk\fP is required, and with the ability to
specify several thousand bytes of program text as a command argument\&.
GNU awk  works, as does the ATT Awk book awk, and the awk on BSD systems\&.
See the INSTALL file for further details regarding a small issue with the
OpenSolaris (c\&.2006) awk\&.
.PP
Tar or pax is used for internally for data transfer\&.  You may specify which one\&.  
\fBswlist\fP and \fBswverify\fP require
either GNU tar or pax be present on a host\&.  You may set auto detection
for this requirement
.PP
.nf
\f(CWswlist\&.swbis_local_pax_write_command=detect #{pax|tar|gtar|detect}
swlist\&.swbis_remote_pax_write_command=detect #{pax|tar|gtar|detect}\fR
.fi
.PP
 
.PP
GNU Privacy Guard, gpg is required for verification of package signatures\&.
.SH "FILES"
.PP
.PP
.nf
\f(CW/var/lib/swbis/catalog # Location of installed catalog
/usr/lib/swbis/swdefaults
/usr/lib/swbis/swbisdefaults
$HOME/\&.swbis/swdefaults
$HOME/\&.swbis/swbisdefaults\fR
.fi
.PP
 
.SH "APPLICABLE STANDARDS"
.PP
ISO/IEC 15068-2:1999, Open Group CAE C701
.SH "SEE ALSO"
.PP
info swbis
.PP
swbis(7), sw(5), swbisparse(1), swign(1), swverify(8) 
.SH "IDENTIFICATION"
 swlist(8): The query/listing utility of the swbis project\&.
 Author: Jim Lowe   Email: jhlowe at acm\&.org
 Version: 1\&.13\&.1
 Last Updated: 2006-07
 Copying: GNU Free Documentation License
.SH "BUGS"
.PP
swlist is subject to breakage if a user\&'s account on an intermediate
(or terminal) host in a target spec is not configured to use a Bourne
compatible shell\&. (This breakage may be eliminated by use of the 
--no-getconf option as explained above\&.)
.PP
swlist does not currently implement the -v,-a options\&.  Listing products
in a distribution is not supported\&.  Operating on a distribution in
directory form is not supported\&.  The catalog query funtions are
implemented in awk and subject to its bugs\&.
.\" created by instant / docbook-to-man, Fri 02 Nov 2018, 20:39
