...\" $Header: /usr/src/docbook-to-man/cmd/RCS/docbook-to-man.sh,v 1.3 1996/06/17 03:36:49 fld Exp $
...\"
...\"	transcript compatibility for postscript use.
...\"
...\"	synopsis:  .P! <file.ps>
...\"
.de P!
\\&.
.fl			\" force out current output buffer
\\!%PB
\\!/showpage{}def
...\" the following is from Ken Flowers -- it prevents dictionary overflows
\\!/tempdict 200 dict def tempdict begin
.fl			\" prolog
.sy cat \\$1\" bring in postscript file
...\" the following line matches the tempdict above
\\!end % tempdict %
\\!PE
\\!.
.sp \\$2u	\" move below the image
..
.de pF
.ie     \\*(f1 .ds f1 \\n(.f
.el .ie \\*(f2 .ds f2 \\n(.f
.el .ie \\*(f3 .ds f3 \\n(.f
.el .ie \\*(f4 .ds f4 \\n(.f
.el .tm ? font overflow
.ft \\$1
..
.de fP
.ie     !\\*(f4 \{\
.	ft \\*(f4
.	ds f4\"
'	br \}
.el .ie !\\*(f3 \{\
.	ft \\*(f3
.	ds f3\"
'	br \}
.el .ie !\\*(f2 \{\
.	ft \\*(f2
.	ds f2\"
'	br \}
.el .ie !\\*(f1 \{\
.	ft \\*(f1
.	ds f1\"
'	br \}
.el .tm ? font underflow
..
.ds f1\"
.ds f2\"
.ds f3\"
.ds f4\"
.ta 8n 16n 24n 32n 40n 48n 56n 64n 72n 
.TH "swinstall" "8"
 
.hy 0 
.if n .na
.SH "NAME"
swinstall \(em Install POSIX and RPM packages\&.
.SH "SYNOPSIS"
.PP
.nf
\fBswinstall\fP [-p] [-r] [-s \fIsource_file\fP] [-f \fIfile\fP] \\
[-t \fItargetfile\fP] [-x \fIoption=value\fP]  [-X \fIoptions_file\fP] [-W \fIoption\fP] \\
[software_selections] [@target [target1\&.\&.\&.]] 
.fi
.PP
.nf
\fBswinstall\fP -s -    # Minimum unambiguous invocation\&.
.fi
 
.SH "DESCRIPTION"
.PP
\fBswinstall\fP installs a POSIX distribution from a source archive to a target
directory\&.  A POSIX distribution is a package, typically a compressed tarball with metadata files in the prescribed file layout\&.
Neither swinstall nor any component of swbis is required
on the target host, however, the target host must look like a Unix system at
the shell and command-line utility level and have a POSIX shell\&.
Remote network connections are made by ssh\&.
Ssh is the default but rsh can be selected by a command line
option\&.
.PP
By default and with no external influences (i\&.e\&. swdefaults file) swinstall
will read an archive on stdin and install all products and filesets of package
in "/" directory on the target host\&.  An alternate root may be specified using
the target syntax\&.  The distribution source directory (swbis default: stdin)
is selectable via the defaults file, therefore it should be specified in
uncontrolled environments\&.
.PP
\fBswinstall\fP operates on  cpio or tar archives\&.
swinstall supports cpio archives by first translating to tar format, therefore,
to reduce the data transformations performed by swinstall, distributors encouraged to
deliver products in tar format\&.
.PP
\fBswinstall\fP will create an entry in an installed software catalog\&.  This is a directory
usually located at /var/lib/swbis/catalog\&.  Using this information
checks for upgrade, downdate, dependencies, and reinstallation are made\&.
.SH "OPTIONS"
.PP
.RS
 
.RE
.PP
\fB-f FILE\fP 
.RS
 
Reads software_selections from FILE\&. (Not implemented)\&.
.RE
.PP
\fB-p\fP
.RS
 
Preview the operation\&. 
Depending on the verbose level information is written to stdout\&.
The target is not modified although a remote connection is established\&.
.RE
 
.PP
\fB-r\fP
.RS
 
This option has no affect\&.
.RE
 
.PP
\fB-s SOURCE\fP 
.RS
 
Specify the source file SOURCE, "-" is standard input\&.
The syntax is the same as for a target\&.
SOURCE may be an archive file or stdin\&.
.RE
.PP
\fB-t targetfile\fP 
.RS
 
Specify a file containing a list of targets (one per line)\&.
.RE
.PP
\fB-x option=value\fP 
.RS
 
Specify the extended option overriding the defaults file value\&.
.RE
.PP
\fB-X FILE\fP 
.RS
 
Specify the extended options filename, FILE,  overriding the default filenames\&.
This option may be given more then once\&. If the resulting specified value is an empty string
then reading of any options file is disabled\&.
.RE
.PP
\fB-v\fP 
.RS
 
Given one time it is identical to -x verbose=2\&.
This option can be given multiple times with increasing effect\&.
(Implementation extension option)\&.
.br
-v  is level 2, -vv is level 3,\&.\&.\&. etc\&.
.br
    level 0: silent on stdout and stderr\&.
.br
    level 1: fatal and warning messages to stderr\&.
.br
-v  level 2: level 1 plus a progress bar\&.
.br
-vv level 3: level 2 plus script stderr\&.
.br
-vvv level 4: level 3 plus events\&.
.br
-vvvv level 5: level 4 plus events\&.
.br
-vvvvv level 6: level 5 plus set shell -vx option\&.
.br
-vvvvvv level 7 and higher: level 6 plus debugging messages\&.
.br
.RE
.PP
\fB\-\-version, -V\fP 
.RS
 
Show version (Implementation extension)
.RE
.PP
\fB\-\-help\fP 
.RS
 
Show help (Implementation extension)
.RE
.PP
\fB-W option[,option,\&.\&.\&.]\fP 
.RS
 
Specify the implementation extension option\&.
.br
Syntax: -W option[=option_argument[,option\&.\&.\&.]
.br
Options may be separated by a comma\&.  The implementation extension
options may also be given individually using the \&'--long-option[=option_arg]\&' syntax\&.
.RE
.PP
\fB-W preview-tar-file=FILE\fP 
.RS
 
This is a testing/development option\&.
Writes the fileset archive to FILE\&.  This is the same data stream that would have been loaded on the target\&.
This option should only be used with the \&'-p\&' option\&.  The output sent to FILE is a tar archive but without
trailer blocks\&.
.RE
.PP
\fB-W remote-shell=NAME\fP 
 
.RS
 
Defaults File Option: \fBswbis_remote_shell_client\fP
.br
.RE
  
.RS
This is the remote connection client program on the management (originating host)\&.
The path NAME may be an absolute path (not located in $PATH)\&.
The basename of NAME is used for intermediate hops\&. 
Supported shells are "ssh" and "rsh"\&.
The default is "ssh"\&.
.RE
.PP
\fB-W quiet-progress\fP
.RS
 
Defaults File Option: \fBswbis_quiet_progress_bar\fP Disable progress bar, which is active for verbose levels 2 and higher (i\&.e\&. -v)\&.
.RE
.PP
\fB-W show-options-files\fP 
.RS
Show the complete list of options files and if they are found\&.
.RE
.PP
\fB-W show-options\fP 
.RS
Show the options after reading the files and parsing the command line options\&.
.RE
.PP
\fB-W pax-command={tar|pax|star|gtar}\fP
.br
.RS
Set the portable archive command for all operations\&.
The default is "pax"\&.
.RE
.PP
\fB-W pax-read-command={tar|pax|star|gtar}\fP
.RS
Set the read command for local and remote hosts\&.
.RE
.PP
\fB-W remote-pax-read-command={tar|pax|star|gtar}\fP
.RS
Defaults File Option: \fBswbis_remote_pax_read_command\fP
.RE
.RS
Set the read command for remote hosts\&.
This is the command that runs on the target (e\&.g\&. pax -r, tar xpf -)\&.
The default is "pax"\&.
.RE
.PP
\fB-W local-pax-read-command={tar|pax|star|gtar}\fP
.RS
Defaults File Option: \fBswbis_local_pax_read_command\fP
.RE
.RS
Set the read command for local hosts\&.
This is the command that runs on the target (e\&.g\&. pax -r, tar xpf -)\&.
The default is "pax"\&.
.RE
.PP
\fB-W pax-write-command={tar|pax|star|gtar|swbistar}\fP
.br
.RS
Set the write command for local and remote hosts\&.
This is the command that runs on the target (e\&.g\&. pax -w, tar cf -)\&.
.RE
.PP
\fB-W remote-pax-write-command={tar|pax|star|gtar|swbistar}\fP
.br
.RS
Defaults File Option: \fBswbis_remote_pax_write_command\fP
.RE
.RS
Set the write command for remote hosts\&.
.RE
.PP
\fB-W local-pax-write-command={tar|pax|star|gtar|swbistar}\fP
.RS
Defaults File Option: \fBswbis_local_pax_write_command\fP
.RE
.RS
Set the portable archive write command for local host operations\&.
This is the command that runs on the source (e\&.g\&. pax -w, tar cf -)\&.
The default is "pax"\&.
.RE
.PP
\fB-W remote-pax-write-command={tar|pax|star|gtar|swbistar}\fP
.RS
Defaults File Option: \fBswbis_remote_pax_write_command\fP
.RE
.RS
Set the portable archive write command for remote host operations\&.
This is the command that runs on the source (e\&.g\&. pax -w, tar cf -)\&.
The default is "pax"\&.
.RE
.PP
\fB-W no-defaults\fP 
.RS
Do not read any defaults files\&.
.RE
.PP
\fB-W no-remote-kill\fP 
.RS
Defaults File Option: \fBswbis_no_remote_kill\fP
.RE
.RS
Disables the use of a second remote connection to tear down the first in
the event of SIGINT or SIGTERM or SIGPIPE\&.
Only has effect if the number of ssh hops is greater than 1\&.
A single host remote connection (ssh hop = 1) never uses a
second remote connection\&.
.RE
.PP
\fB-W no-getconf\fP 
.RS
Defaults File Option: \fBswbis_no_getconf\fP
.RE
.RS
Makes the remote command be \&'/bin/sh -s\&' instead of the default
\&'PATH=`getconf PATH` sh -s\&'\&. 
.RE
.PP
\fB-W shell-command=NAME\fP 
.RS
Defaults File Option: \fBswbis_shell_command\fP
.RE
.RS
This is the interactive shell on the target host\&.
NAME may be one of "detect" "bash", "sh", "ksh"  or "posix" and specifies the
remote command run by the remote shell\&.
"posix" is \&'PATH=`getconf PATH` sh -s\&', "bash" is "/bin/bash -s", 
"sh" is "/bin/sh -s", and "ksh" is "ksh -s"\&.
The default is "detect"\&.
.RE
.PP
\fB-W use-getconf\fP 
.RS
Opposite of \-\-no-getconf\&.
.RE
.PP
\fB-W allow-rpm\fP 
.RS
Defaults File Option: \fBswbis_allow_rpm\fP
.RE
.RS
Enable automatic detection, translation to POSIX format, and installation of RPMs\&.
.RE
.PP
\fB-W pump-delay1=NANOSECONDS\fP 
.RS
Adds a NANOSECONDS delay (999999999 nanoseconds ~ 1 second) every ADJSIZE bytes in
the file data byte pump\&.  A delay of 10111000 nanoseconds (~1/100th second) is added 
for 2-hop or greater target (i\&.e more than 1 remote host in the target spec)\&.
This is a work around for a bug in OpenSSH [or Linux kernel] that is seen for multi-hop
installs where the intermediate host is a Linux kernel\&.  If 2-hop install fails, try it
again, you may get lucky, or, increase this delay, or, use ssh protocol version 1 by
using \&'\&'--ssh-options=1\&'\&', or try a 2-hop install where the middle host is BSD\&.
To disable delay for multi-hop targets specify zero\&.
For more information about this bug see the README file from the source distribution\&.
.RE
.PP
\fB-W burst-adjust=ADJSIZE\fP 
.RS
ADJSIZE is the pumped data size, in bytes, between the NANOSECONDS delays\&.
This is a work around for a bug in OpenSSH or the Linux kernel that is
seen for multi-hop installs where the intermediate host is a Linux kernel\&.
The default is 72000 for 2-hops or greater, and zero for
single hop and localhost installs\&.
.RE
.PP
\fB-W ssh-options=OPTIONS\fP
.RS
ssh client program options\&.  For example -W ssh-options=1 sets the
\&'-1\&' ssh client option which specifies protocol version 1\&.
.RE
.PP
\fB-W source-script-name=NAME\fP
.RS
Write the script that is written into the remote shell\&'s stdin to NAME\&.
This is useful for debugging\&.
.RE
.PP
\fB-W target-script-name=NAME\fP
.RS
Write the script that is written into the remote shell\&'s stdin to NAME\&.
This is useful for debugging\&.
.RE
.PP
\fBsoftware_selections\fP
.RS
 
Refers to the software objects (products, filesets)
on which to be operated\&. This is not implemented, however, specification of a
\fBlocation\fP and \fBqualifier\fP are supported\&. 
\fBlocation\fP allow specification of a alternate relative root path
within the target path, and \fBqualifier\fP allows specification of a
user-selectable modifier\&.  For example:
.PP
.nf
\f(CWswinstall q=exp @ 192\&.168\&.1\&.1  # Tag the package as experimental
swinstall l=/unionfs/somepackage-1\&.0 @ 192\&.168\&.1\&.1  # Allows multiple
                              # packages with same tag to exist in the
                              # same target path, where the location
                              # disambiguates\&.\fR
.fi
.PP
.RE
 
.PP
\fBtarget\fP
.RS
 
Refers to the software_collection where the software
selections are to be applied\&.  Allows specification of host and pathname where the software collection is to be located\&.
A target that contains only one part is assumed to be a hostname\&.
To force interpretation as a path, use an absolute path or prefix with \&':\&'\&.  The default target path for \&'swinstall\&' is always \&'/\&'\&.
.RE
 
.PP
.nf
\f(CWSource and Target Specification and Logic
     
     Synopsis:
          Posix:
               host[:path]
               host
               host:
               /path  # Absolute path

          Swbis Extension:
               [user@]host[:path]
               [user@]host_port[:path]
               :path

          Swbis Multi-hop Target Extension:
               # \&':\&' is the target delimiter
	       # \&'_\&' delimits a port number in the host field

               [user@]host[@@[user@]host[@@\&.\&.\&.]][:file] 
               [user@]host_port[@@[user@]host[@@\&.\&.\&.]][:file] 
              
               # Using \&':\&', a trailing colon is used to
               # disambiguate between a host and file\&.
	       # For Example,
               :file
               host:
               host
               host:file
               host:host:
               host_port:host_port:
               host:host:file
               user@host:user@host:
               user@host:user@host:host:
               user@host:user@host:file
 
     A more formal description:

     target : HOST_CHARACTER_STRING \&':\&' PATHNAME_CHARACTER_STRING
            | HOST_CHARACTER_STRING \&':\&'
            | HOST_CHARACTER_STRING 
            | PATHNAME_CHARACTER_STRING 
            | \&':\&' PATHNAME_CHARACTER_STRING   # Impl extension
            ; 

       PATHNAME_CHARACTER_STRING must be an absolute path unless
                       a HOST_CHARACTER_STRING is given\&.  Allowing
                       a relative path is a feature of the swbis
                       implementation\&.

                NOTE: A \&'\&.\&' as a target is an implementation
                      extension and means extract in current
                      directory\&.
 
                NOTE: A \&'-\&' indicating stdout/stdin is an 
                      implementation extension\&.

                NOTE: A \&':\&' in the first character indicates a filename\&.
                      This is an implementation extension\&.

       HOST_CHARACTER_STRING is an IP or hostname\&.

    Examples:
       Copy the  distribution /var/tmp/foo\&.tar\&.gz at 192\&.168\&.1\&.10
              swcopy -s /var/tmp/foo\&.tar\&.gz @192\&.168\&.1\&.10:/root


Implementation Extension Syntax (multi ssh-hop) :
    Syntax:
    %start   wtarget    # the Implementation Extension Target
                        # Note: a trailing \&':\&' forces interpretation
                        # as a host, not a file\&.
    wtarget   : wtarget DELIM sshtarget
              | sshtarget
              | sshtarget DELIM
              ; 
    sshtarget : user \&'@\&' target # Note: only the last target
              | target          # may have a PATHNAME, and only a host
              ;                 * may have a user
    target   : HOST_CHARACTER_STRING
             | PATHNAME_CHARACTER_STRING
             ;
    user     : PORTABLE_CHARACTER_STRING  # The user name

    DELIM    : \&':\&'   # The multi-hop delimiter\&.
             ;  \fR
.fi
.PP
 
 
.SH "INSTALLATION"
.PP
Installation consists of an analysis phase and an execution phase\&.
.SS "Analysis Phase"
.PP
The installed software catalog is queried and checks are made to detect reinstallation, downdating
(installing an older version)\&.  Dependency tests are made at this point\&.  If these checks pass or
are overridden by options, then the installed software catalog entry is created (moving the old entry)\&.
The \fBcheckinstall\fP script is exectuted\&.  This script should be non-interactive,
idempotent, and read-only from the system\&'s perspective\&.  This script may exit with status of 0,1,2, or 3\&.
If the exit status is 3 (or 1) installation is rejected and the installed catalog is restored\&.
.SS "Execution Phase"
.PP
The \fBpreinstall\fP script is executed, the fileset files are loaded by the
system tar utility and \fBpostinstall\fP is executed\&.
.SS "o   Execution Script Environment"
.PP
\fBswinstall\fP sets certain enviroment variables during execution\&.
The values set are hard-coded in the \fBcontrol\&.sh\fP script generated by swinstall\&.
.PP
For example, execution of the \fBpostinstall\fP script in
package \fIfoobar-1\&.0\&.tar\&.gz\fP with the following layout
.PP
.nf
\f(CWfoobar-1\&.0/ 
foobar-1\&.0/\fBcatalog\fP/
foobar-1\&.0/\fBcatalog\fP/\fBINDEX\fP
.br
foobar-1\&.0/\fBcatalog\fP/dfiles/
foobar-1\&.0/\fBcatalog\fP/foobar/
foobar-1\&.0/\fBcatalog\fP/foobar/pfiles/
foobar-1\&.0/\fBcatalog\fP/foobar/pfiles/\fBINFO\fP
.br
foobar-1\&.0/\fBcatalog\fP/foobar/pfiles/\fBpostinstall\fP
.br
foobar-1\&.0/\fBcatalog\fP/foobar/bin/
.br
foobar-1\&.0/\fBcatalog\fP/foobar/bin/\fBINFO\fP
.br
\fR
.fi
.PP
.PP
installed with the following command:
.br
.br
.PP
.nf
\f(CWswinstall -x installed_software_catalog=/var/software/catalog \\
		@ /mnt/test\fR
.fi
.PP
.br
will result in the following environment (among others, inspect \fBcontrol\&.sh\fP):
.PP
.PP
.nf
\f(CW
.br
     SW_PATH=/bin:/usr/bin
     SW_ROOT_DIRECTORY=/mnt/test
     SW_CATALOG=var/software/catalog/foobar/foobar/1\&.0/0 
     SW_CONTROL_TAG= postinstall 
     SW_CONTROL_DIRECTORY=/mnt/test/var/software/catalog/\\
			foobar/foobar/1\&.0/0/export/foobar-1\&.0/catalog/foobar/pfiles 
     SW_SESSION_OPTIONS=/mnt/test/var/software/catalog/\\
			foobar/foobar/1\&.0/0/session_options\fR
.fi
.PP
\fBSW_PATH\fP is constructed using getconf(1) to locate the posix level utilites, otherwise it is
the same as \fBPATH\fP\&.
.PP
If the interpreter attribute from the \fBINFO\fP file, is \&'sh\&' or unset, the executed shell interpreter
is /bin/bash,  sh as found in the PATH specified by getconf(1),  or /bin/sh in this order\&. 
.PP
As of swbis-1\&.12 (Version 1\&.12), control script execution begins with a
current working directory ($PWD) of
\fBSW_ROOT\fP\&.
Prior to version 1\&.12, initial current working directory was equivalent to \fB$SW_ROOT/$SW_CATALOG\fP\&. 
 
.SH "INSTALLED SOFTWARE CATALOG"
.PP
The form or format of an installed software catalog is
not specified by the ISO/IEC spec although it does specify
an interface to it (e\&.g\&. swlist utility) and operations on it\&.
.PP
This implementation creates a de-facto installed software catalog rooted at the file system path specified by the value of the
installed_software_catalog extended option\&.  The catalog is a file system hierarchy containing regular files
and directories\&. 
.PP
The catalog is typically located relative to the target path\&.  As of swbis version 1\&.5, the catalog location
may be specified using the file URL syntax to indicate an absolute path\&.  Any other form, such as an unadorned
absolute UNIX path will be treated as a path relative to the target path\&. 
.PP
For Example: 
.br
Below are example values of the 
\fIinstalled_software_catalog\fP extended option found in
the \fBswdefaults\fP file usually located in
$HOME/\&.swbis/swdefaults
 
.PP
.nf
\f(CW
.br
   var/lib/swbis/catalog   # Default, relative to target path

   /var/lib/swbis/catalog  # Same, leading slash not respected

   file://localhost/var/lib/swbis/catalog  # Really absolute

   file:///var/lib/swbis/catalog           # Note triple leading slash\fR
.fi
.PP
 
.SS "CATALOG FILE LAYOUT"
.PP
.PP
.nf
\f(CW
.br
 <\fIpath\fP>/ 
 <\fIpath\fP>/<\fIISC\fP>/
 <\fIpath\fP>/<\fIISC\fP>/<\fIbundle\fP>/
 <\fIpath\fP>/<\fIISC\fP>/<\fIbundle\fP>/<\fIproduct\fP>/
 <\fIpath\fP>/<\fIISC\fP>/<\fIbundle\fP>/<\fIproduct\fP>/<\fIpr\fP>/
 <\fIpath\fP>/<\fIISC\fP>/<\fIbundle\fP>/<\fIproduct\fP>/<\fIpr\fP>/<\fIseqence_number\fP>/
 <\fIpath\fP>/<\fIISC\fP>/<\fIbundle\fP>/<\fIproduct\fP>/<\fIpr\fP>/<\fIsequence_number\fP>/\fBexport\fP/
 <\fIpath\fP>/<\fIISC\fP>/<\fIbundle\fP>/<\fIproduct\fP>/<\fIpr\fP>/<\fIsequence_number\fP>/\fBexport\fP/\fBcatalog\&.tar\fP 
 <\fIpath\fP>/<\fIISC\fP>/<\fIbundle\fP>/<\fIproduct\fP>/<\fIpr\fP>/<\fIsequence_number\fP>/\fBexport\fP/\fBcatalog\&.tar\&.sig\fP 
 <\fIpath\fP>/<\fIISC\fP>/<\fIbundle\fP>/<\fIproduct\fP>/<\fIpr\fP>/<\fIsequence_number\fP>/\fBexport\fP/\fBcatalog\&.tar\&.sig\fP<\fIN\fP>
 <\fIpath\fP>/<\fIISC\fP>/<\fIbundle\fP>/<\fIproduct\fP>/<\fIpr\fP>/<\fIsequence_number\fP>/\fBINSTALLED\fP 
 <\fIpath\fP>/<\fIISC\fP>/<\fIbundle\fP>/<\fIproduct\fP>/<\fIpr\fP>/<\fIsequence_number\fP>/\fBcontrol\&.sh\fP 
 <\fIpath\fP>/<\fIISC\fP>/<\fIbundle\fP>/<\fIproduct\fP>/<\fIpr\fP>/<\fIsequence_number\fP>/\fBsession_options\fP 
 <\fIpath\fP>/<\fIISC\fP>/<\fIbundle\fP>/<\fIproduct\fP>/<\fIpr\fP>/<\fIsequence_number\fP>/\fBvendor_tag\fP 
 <\fIpath\fP>/<\fIISC\fP>/<\fIbundle\fP>/<\fIproduct\fP>/<\fIpr\fP>/<\fIsequence_number\fP>/\fBlocation\fP 
 <\fIpath\fP>/<\fIISC\fP>/<\fIbundle\fP>/<\fIproduct\fP>/<\fIpr\fP>/<\fIsequence_number\fP>/\fBqualifier\fP \fR
.fi
.PP
.PP
<\fIpath\fP> is the target path\&.
<\fIISC\fP> is the value of the installed_software_cataglog extended option\&.
<\fIbundle\fP> and <\fIproduct\fP> are bundle and product tags\&.
If there is no bundle in the distribution the product tag is used\&.
<\fIpr\fP> is the product revision\&.  Other items are explained below\&.
.SS "CATALOG LOCATION"
.PP
.br
.PP
.nf
\f(CW/<\fIpath\fP>/ 
/<\fIpath\fP>/<\fIinstalled_software_catalog\fP>/
/<\fIpath\fP>/<\fIinstalled_software_catalog\fP>/\&.\&.\&.\fR
.fi
.PP
.SS "    * Root or Alternate Root"
.PP
.nf
/<\fIpath\fP>/ 
.fi
.PP
<\fIpath\fP>/ 
is the target path specified in the target syntax\&. By default "/"\&.
.SS "    * Catalog Relative Root Directory"
.PP
.nf
/<\fIpath\fP>/ 
/<\fIpath\fP>/<\fIinstalled_software_catalog\fP>/
.fi
.PP
<\fIinstalled_software_catalog\fP>/
is the value of the extended option by the same name\&.  By default "var/lib/swbis/catalog"\&.
.SS "PACKAGE CATALOG RELATIVE ROOT"
.PP
.br
.PP
.nf
\f(CW/<\fI{bundle|prod}\&.tag\fP>/<\fIprod\&.tag\fP>/<\fIprod\&.revision\fP>/\&.\&.\&.\fR
.fi
.PP
 In other words, if \&'product\&' and \&'bundle\&' refers to tags, and 
product_revision is the value of the product\&.revision attribute then
the path segment is:
.br
.PP
.nf
\f(CW /bundle/product/product_revision\fR
.fi
.PP
.SS "CATALOG SEQUENCE NUMBER"
.PP
.br
.PP
.nf
\f(CW /<\fIsequence_number\fP>/
 /<\fIsequence_number\fP>/\&.\&.\&.\fR
.fi
.PP
.PP
\fIsequence_number\fP is a decimal integer starting with \&'0\&'\&.
It is chosen by swinstall to be unique at the time of installation\&.
.SS "CATALOG CONTENTS"
.PP
.br
.PP
.nf
\f(CW<\fIsequence_number\fP>/
 <\fIsequence_number\fP>/\fBexport\fP/
 <\fIsequence_number\fP>/\fBexport\fP/\fBcatalog\&.tar\fP 
 <\fIsequence_number\fP>/\fBexport\fP/\fBcatalog\&.tar\&.sig\fP 
 <\fIsequence_number\fP>/\fBINSTALLED\fP 
 <\fIsequence_number\fP>/\fBcontrol\&.sh\fP 
 <\fIsequence_number\fP>/\fBsession_options\fP 
 <\fIsequence_number\fP>/\fBvendor_tag\fP 
 <\fIsequence_number\fP>/\fBlocation\fP 
 <\fIsequence_number\fP>/\fBqualifier\fP \fR
.fi
.PP
.SS "    The export directory"
.PP
.br
.PP
.nf
\f(CW \fBexport\fP/
 \fBexport\fP/\&.\&.\&.
 \fBexport\fP/\fBcatalog\&.tar\fP 
 \fBexport\fP/\fBcatalog\&.tar\&.sig\fP 
 \fBexport\fP/\fBcatalog\&.tar\&.sig2\fP 
               \&.\&.\&.
 \fBexport\fP/\fBcatalog\&.tar\&.sig\fP\fIN\fP\fR
.fi
.PP
.PP
The \fBexport\fP/ is a file system directory and its name is constant for all
packages and is unique to the swbis implementation\&.
The \fBexport\fP/\fBcatalog\&.tar\fP file is the signed file from the POSIX
distribution\&.
The \fBexport\fP/\fBcatalog\&.tar\&.sig\fP file is the signature file
from the distribution\&.  If there is more than one signature, then it is the last one\&.
\fBexport\fP/\fBcatalog\&.tar\&.sig2\fP is the next to
last signature, and \fBexport\fP/\fBcatalog\&.tar\&.sig\fP\fIN\fP is
the first one, where \fIN\fP is the total number of signatures\&.
.SS "    INSTALLED -- The state metadata file"
.PP
.br
.PP
.nf
\f(CW <\fIsequence_number\fP>/\fBINSTALLED\fP \fR
.fi
.PP
.PP
The INSTALLED file is similar to an INDEX file in its grammar and syntax\&.  Unlike an INDEX file, it may contain
control_file definitions\&.
The INSTALLED file stores the control script return codes and fileset installation state\&.  It is updated several times during the
operation of \&'swinstall\&'\&.  It can be parsed using  libexec/swbisparse and the \&'--installed\&' option\&.
.SS "    control\&.sh -- The master control script"
.PP
.br
.PP
.nf
\f(CW <\fIsequence_number\fP>/\fBcontrol\&.sh\fP 
  SYNOPSIS: \fBcontrol\&.sh\fP \fItag_spec\fP \fIscript_tag\fP\fR
.fi
.PP
.PP
The control\&.sh file is a POSIX shell script that is automatically generated by swinstall\&.  It provides a common interface for
control script execution\&.  Its primary purpose is to set up the script\&'s execution environment and map script tags to the
control script pathnames\&.  It assumes that \&'export/catalog\&.tar\&' is unpacked in export/\&.
.SS "    session_options -- The extended options"
.PP
.br
.PP
.nf
\f(CW <\fIsequence_number\fP>/\fBsession_options\fP \fR
.fi
.PP
.PP
This file contains the extended options in a form that may be executed by the shell \&'\&.\&' (dot) command\&.
It is automatically generated by swinstall\&.  The value of the SW_SESSION_OPTIONS environment variable is the absolute
pathname of the this file\&. 
.SS "EXAMPLE CATALOG ENTRY"
.PP
Below is an example entry of the catalog created by swbis version 0\&.405\&.
In this example, the target path is \&'/mnt/test\&', the \fIinstalled_software_catalog\fP is \&'/var/lib/swbis/catalog/\&', the
bundle tag is \&'foobare\&', the product tag is \&'foobare-doc\&', and the product revision attribute is \&'0\&.902\&'\&.
.PP
.nf
\f(CW/mnt/test/var/lib/swbis/catalog/foobare/foobare-doc/0\&.902/0/export
/mnt/test/var/lib/swbis/catalog/foobare/foobare-doc/0\&.902/0/export/catalog\&.tar
/mnt/test/var/lib/swbis/catalog/foobare/foobare-doc/0\&.902/0/export/catalog\&.tar\&.sig
/mnt/test/var/lib/swbis/catalog/foobare/foobare-doc/0\&.902/0/INSTALLED
/mnt/test/var/lib/swbis/catalog/foobare/foobare-doc/0\&.902/0/control\&.sh
/mnt/test/var/lib/swbis/catalog/foobare/foobare-doc/0\&.902/0/vendor_tag
/mnt/test/var/lib/swbis/catalog/foobare/foobare-doc/0\&.902/0/location
/mnt/test/var/lib/swbis/catalog/foobare/foobare-doc/0\&.902/0/qualifier
/mnt/test/var/lib/swbis/catalog/foobare/foobare-doc/0\&.902/0/session_options\fR
.fi
.PP
 A deleted old catalog entry begin with \&'_\&', for example
.PP
.nf
\f(CW/mnt/test/var/lib/swbis/catalog/foobare/foobare-doc/0\&.902/_0/\&.\&.\&.\fR
.fi
.PP
.PP
Although swinstall does not depend on the file name as this accommodates installing from
standard input, a typical name for this package would be:
.PP
.nf
\f(CW       foobare-doc-0\&.902-sl04\&.tar\&.gz\fR
.fi
.PP
 where \&'sl04\&' is the vendor tag\&.
.SH "IMPLEMENTATION EXTENSIONS"
.SS "Software Specification Targets"
.PP
A dash \&'-\&' is supported and means stdout or stdin\&.
Operations with stdout and stdin on a remote host is not supported\&.
.PP
A decimal \&'\&.\&' is supported and means the current directory\&.
This is supported for remote and non-remote targets\&.
If the source is standard input, the distribution will be unpacked
(e\&.g\&. pax -r) in the directory \&'\&.\&'\&.
If the source is a regular file then a regular file in \&'\&.\&' will be created
with the same name\&.
 
.SS "RPM Translation"
.PP
RPM (RedHat Package Manager) format packages are installed by first translating to
an equivalent ISO/IEEE file layout in POSIX tar format and then installing as
a POSIX package\&.  This translation and detection is transparent to the user if
the \&'\&'--allow-rpm\&'\&' option is set in the command line args or the swbis_allow_rpm
is set to "true" by the defaults files, otherwise an error occurs\&.
.PP
Since translation is done on the local (management) host, RPM is not required on
the remote (target) host\&.
.PP
The translation is (internally) equivalent to :
.PP
.nf
\f(CW   cat your-0\&.0-1\&.bin\&.rpm | 
   /usr/lib/swbis/lxpsf --psf-form2 -H ustar |
   swpackage -W source=- -s @PSF | swinstall -s - @/\fR
.fi
.PP
.SS "Testing with RPM"
 To test the swbis components, a completely independent means to install and
verify a package is needed\&.  RPM provides this means and can be used in the
following way:
.PP
.nf
\f(CW   rpm -i --nodeps --force your-0\&.0-1\&.i386\&.rpm  # Install 
   rpm --verify --nodeps your-0\&.0-1             # Show that all is well
   rpm -e --nodeps your-0\&.0-1                   # Remove it\&.
   rpm -i --nodeps --justdb your-0\&.0-1\&.i386\&.rpm # Install just the database\&.
   rpm --verify --nodeps your-0\&.0-1             # Shows the files are missing\&.
   swinstall --allow-rpm -s - < your-0\&.0-1\&.i386\&.rpm 
   rpm --verify --nodeps your-0\&.0-1             # Show that all is well again\fR
.fi
.PP
.SH "EXTENDED OPTIONS"
.PP
Extended options can be specified on the command line using the -x option
or from the defaults file, swdefaults\&.  Shown below is an actual portion of
a defaults file which show default values\&.
.SS "POSIX"
.PP
These options are set in the /usr/lib/swbis/swdefaults or the ~/\&.swdefaults
.PP
.PP
.nf
\f(CW  allow_downdate              = false      # Not Implemented
  allow_incompatible          = false      # Not Implemented
  ask                         = false      # Not Implemented
  autoreboot                  = false      # Not Implemented
  autorecover                 = false      # Not Implemented
  autoselect_dependencies     = false      # Not Implemented
  defer_configure             = false      # Not Implemented
  distribution_source_directory   = -	     # Stdin
  enforce_dependencies        = false      # Not Implemented
  enforce_locatable           = false      # Not Implemented
  enforce_scripts             = false      # Not Implemented
  enforce_dsa                 = false      # Not Implemented
  installed_software_catalog  = var/lib/swbis/catalog
  logfile             = /var/lib/sw/swinstall\&.log #Not Implemented
  loglevel                    = 0          # Not Implemented
  reinstall                   = false      # Not Implemented
  select_local		= false      # Not Implemented
  verbose			= 1\fR
.fi
.PP
.SS "Swbis Implementation"
.PP
These options are set in the /usr/lib/swbis/swbisdefaults or the ${HOME}/\&.swbis/swbisdefaults
file\&. 
.PP
.PP
.nf
\f(CW  swinstall\&.swbis_no_getconf = true # true or false
  swinstall\&.swbis_shell_command = detect # {detect|sh|bash|ksh|posix}
  swinstall\&.swbis_no_remote_kill = false # true or false
  swinstall\&.swbis_no_audit = false # true or false
  swinstall\&.swbis_quiet_progress_bar = false # true or false
  swinstall\&.swbis_local_pax_write_command=pax #{pax|tar|star|gtar}
  swinstall\&.swbis_remote_pax_write_command=pax #{pax|tar|star|gtar}
  swinstall\&.swbis_local_pax_read_command=pax #{pax|tar|gtar|star}
  swinstall\&.swbis_remote_pax_read_command=pax #{pax|tar|gtar|star}
  swinstall\&.swbis_enforce_sig=false # true or false
  swinstall\&.swbis_enforce_file_md5=false # true or false
  swinstall\&.swbis_allow_rpm=false # true or false
  swinstall\&.swbis_remote_shell_client=ssh
  swinstall\&.swbis_install_volatile=true
  swinstall\&.swbis_volatile_newname=     #empty string, e\&.g\&. "\&.rpmnew"\fR
.fi
.PP
.SH "RETURN VALUE"
.PP
0 if all targets succeeded, 1 if all targets failed, 2 if some targets failed and some succeeded\&.
.SH "NOTES"
 Multiple ssh-hops is an implementation extension\&.
.br
.SH "REQUISITE UTILITIES"
.PP
The swbis distributed utilities require
\fBbash\fP, public domain \fBksh\fP, or ksh93 (version 2009-05-05), or 
Sun\&'s /usr/xpg4/bin/sh to be present on the target host\&.  If the
\fBswbis_shell_command\fP extended option is set to \&'detect\&'
you don\&'t have to know which one is present, otherwise you may specify one explicitly\&.
.PP
A POSIX \fBawk\fP is required, and with the ability to
specify several thousand bytes of program text as a command argument\&.
GNU awk  works, as does the ATT Awk book awk, and the awk on BSD systems\&.
See the INSTALL file for further details regarding a small issue with the
OpenSolaris (c\&.2006) awk\&.
.SH "FILES"
.PP
.PP
.nf
\f(CW /var/lib/swbis/catalog # Location of installed catalog
 /usr/lib/swbis/swdefaults
 /usr/lib/swbis/swbisdefaults
 $HOME/\&.swbis/swdefaults
 $HOME/\&.swbis/swbisdefaults\fR
.fi
.PP
.SH "APPLICABLE STANDARDS"
.PP
ISO/IEC 15068-2:1999, Open Group CAE C701
.SH "SEE ALSO"
.PP
info swbis
.PP
swcopy(8), sw(5), swbisparse(1), swign(1), swverify(8), swbis(1), swbis(7) 
.SH "IDENTIFICATION"
 swinstall(8): The installation utility of the swbis project\&.
 Author: Jim Lowe   Email: jhlowe at acm\&.org
 Version: 1\&.13\&.1
 Last Updated: 2014-02-12
 Copying: GNU Free Documentation License
.SH "BUGS"
.PP
swinstall is subject to breakage if a user\&'s account on an intermediate
(or terminal) host in a target spec is not configured to use a Bourne
compatible shell\&. (This breakage may be eliminated by use of the 
--no-getconf option as explained above\&.)
.PP
A multiple ssh hop source spec  (more than 1 remote host involved in the
source transfer) upon a SIGINT may result in sshd and ssh processes
being left on on the intermediate host(s), this despite, swinstall\&'s action of
sending a SIGTERM to the remote script\&'s parent process\&.
.PP
swinstall does not currently implement Software Selections, not fileset dependencies, and much more\&.
Only packages with one product and one fileset are supported\&.
.\" created by instant / docbook-to-man, Fri 02 Nov 2018, 20:39
